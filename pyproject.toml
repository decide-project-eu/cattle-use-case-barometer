[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "barometer"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = []
authors = [
  { name = "Max Nollet", email = "github.lunchroom278@slmails.com" },
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "pandas>=2.2.0",
  "openpyxl",
  "rdflib>=7.0.0",
  "click>=8.0.0"
]

[project.urls]
Documentation = "https://github.com/decide-project-eu/cattle-use-case-barometer/blob/main/README.md"
Issues = "https://github.com/decide-project-eu/cattle-use-case-barometer/issues"
Source = "https://github.com/decide-project-eu/cattle-use-case-barometer"

[project.scripts]
cli-name = "barometer:hellu"

[tool.hatch.version]
path = "src/barometer/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "pre-commit"
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[tool.hatch.envs.lint]
description = "Environment for formatting code and static type checking"
dependencies = [
  "black"
]
[tool.hatch.envs.lint.scripts]
fmt = "black {args:.}"

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/barometer tests}"


[tool.coverage.run]
source_pkgs = ["barometer", "tests"]
branch = true
parallel = true
omit = [
  "src/barometer/__about__.py",
]

[tool.coverage.paths]
barometer = ["src/barometer", "*/barometer/src/barometer"]
tests = ["tests", "*/barometer/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]


[tool.black]
line-length = 79
