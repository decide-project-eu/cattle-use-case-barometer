<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='12' />
    </style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Percentage' caption='Count or Percentage?' datatype='real' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='quantitative' value='2.0'>
        <calculation class='tableau' formula='2.0' />
        <aliases>
          <alias key='1.0' value='Value' />
          <alias key='2.0' value='Percentage' />
        </aliases>
        <members>
          <member alias='Value' value='1.0' />
          <member alias='Percentage' value='2.0' />
        </members>
      </column>
    </datasource>
    <datasource caption='barometer_long' inline='true' name='federated.0vcntkb1ag12t4112knhl1tog42i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='barometer' name='textscan.0104jhk05ztkit17mfl0t1gpibh1'>
            <connection class='textscan' directory='C:/Users/mielh/OneDrive - Universiteit Utrecht/Projecten/DECIDE/cattle-use-case-barometer/Data/DGZ' filename='barometer.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0104jhk05ztkit17mfl0t1gpibh1' name='barometer.csv' table='[barometer#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Filenumber' ordinal='1' />
            <column datatype='string' name='Diagnostic_test' ordinal='2' />
            <column datatype='string' name='Samplenumber' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='integer' name='Lab_reference' ordinal='5' />
            <column datatype='string' name='Sample_type' ordinal='6' />
            <column datatype='string' name='Breed' ordinal='7' />
            <column datatype='string' name='Parameter_code' ordinal='8' />
            <column datatype='integer' name='Result' ordinal='9' />
            <column datatype='string' name='Pathogen' ordinal='10' />
            <column datatype='datetime' name='Date' ordinal='11' />
            <column datatype='integer' name='Postal_code' ordinal='12' />
            <column datatype='string' name='Province' ordinal='13' />
            <column datatype='string' name='Farm_ID' ordinal='14' />
            <column datatype='string' name='Pathogen_identification' ordinal='15' />
            <column datatype='string' name='Pathogen_result' ordinal='16' />
            <column datatype='string' name='Mycoplasma_result' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0104jhk05ztkit17mfl0t1gpibh1' name='barometer.csv' table='[barometer#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Filenumber' ordinal='1' />
            <column datatype='string' name='Diagnostic_test' ordinal='2' />
            <column datatype='string' name='Samplenumber' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='integer' name='Lab_reference' ordinal='5' />
            <column datatype='string' name='Sample_type' ordinal='6' />
            <column datatype='string' name='Breed' ordinal='7' />
            <column datatype='string' name='Parameter_code' ordinal='8' />
            <column datatype='integer' name='Result' ordinal='9' />
            <column datatype='string' name='Pathogen' ordinal='10' />
            <column datatype='datetime' name='Date' ordinal='11' />
            <column datatype='integer' name='Postal_code' ordinal='12' />
            <column datatype='string' name='Province' ordinal='13' />
            <column datatype='string' name='Farm_ID' ordinal='14' />
            <column datatype='string' name='Pathogen_identification' ordinal='15' />
            <column datatype='string' name='Pathogen_result' ordinal='16' />
            <column datatype='string' name='Mycoplasma_result' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Filenumber</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Filenumber]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Filenumber</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diagnostic_test</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Diagnostic_test]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Diagnostic_test</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Samplenumber</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Samplenumber]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Samplenumber</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lab_reference</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Lab_reference]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Lab_reference</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sample_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sample_type]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Sample_type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Breed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Breed]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Breed</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parameter_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Parameter_code]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Parameter_code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Result</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Result]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Result</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pathogen</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pathogen]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Pathogen</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>11</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal_code]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Postal_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Farm_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Farm_ID]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Farm_ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pathogen_identification</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pathogen_identification]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Pathogen_identification</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pathogen_result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pathogen_result]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Pathogen_result</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mycoplasma_result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Mycoplasma_result]</local-name>
            <parent-name>[barometer.csv]</parent-name>
            <remote-alias>Mycoplasma_result</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[barometer.csv_C89005836844455DB6AE9380AC1F5503]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Breed]' role='dimension' type='nominal' />
      <column caption='Positive rate' datatype='real' default-format='p0%' name='[Calculation_1165869355178258436]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(if [Result] = 1 THEN [Date] END ) / COUNT(if not ISNULL([Result]) THEN  [Date] END )' />
      </column>
      <column caption='Value' datatype='real' name='[Calculation_1165869355182714886]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1 1] WHEN 1 THEN [Positive rate (copy)_1165869355181670405] ELSE [Calculation_1165869355178258436] END' />
      </column>
      <column caption='Value or Percent label' datatype='string' name='[Calculation_487233209891385344]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1 1] = 1 THEN &apos;N=&apos; + STR([Positive rate (copy)_1165869355181670405])&#13;&#10;ELSEIF  [Parameters].[Parameter 1 1] = 2 THEN LEFT(STR(ROUND([Calculation_1165869355178258436],4)*100),4) + &apos;%&apos;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Diagnostic_test]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' name='[Lab_reference]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Pathogen]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;BCV&quot;' value='Bovine coronavirus' />
          <alias key='&quot;BRSV&quot;' value='Bovine respiratory syncytial virus' />
          <alias key='&quot;HS&quot;' value='Histophilus somni' />
          <alias key='&quot;MB&quot;' value='Mycoplasma bovis' />
          <alias key='&quot;MH&quot;' value='Mannheimia haemolytica' />
          <alias key='&quot;PI3&quot;' value='Parainfluenza type 3' />
          <alias key='&quot;PM&quot;' value='Pasteurella multocida' />
        </aliases>
      </column>
      <column caption='Positives' datatype='integer' default-format='N' name='[Positive rate (copy)_1165869355181670405]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(if [Result] = 1 THEN [Date] END )' />
      </column>
      <column datatype='integer' name='[Postal_code]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Result]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Sample_type]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='barometer.csv' datatype='table' name='[__tableau_internal_object_id__].[barometer.csv_C89005836844455DB6AE9380AC1F5503]' role='measure' type='quantitative' />
      <column-instance column='[Result]' derivation='None' name='[none:Result:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Breed)' hidden='true' name='[Action (Breed)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Breed]' />
        </groupfilter>
      </group>
      <group caption='Action (Diagnostic_test)' hidden='true' name='[Action (Diagnostic_test)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Diagnostic_test]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Pathogen)' hidden='true' name='[Action (Pathogen)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Pathogen]' />
        </groupfilter>
      </group>
      <group caption='Action (Sample_type)' hidden='true' name='[Action (Sample_type)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sample_type]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, Province'>
          <field>[Country]</field>
          <field>[Province]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Result:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Belgium&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='F1' />
        <field-sort-custom-order field='Filenumber' />
        <field-sort-custom-order field='Calculation_1165869355152326656' />
        <field-sort-custom-order field='Calculation_1165869355152617473' />
        <field-sort-custom-order field='Diagnostic_test' />
        <field-sort-custom-order field='Samplenumber' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Lab_reference' />
        <field-sort-custom-order field='Sample_type' />
        <field-sort-custom-order field='Breed' />
        <field-sort-custom-order field='Parameter_code' />
        <field-sort-custom-order field='Result' />
        <field-sort-custom-order field='Calculation_1165869355154268162' />
        <field-sort-custom-order field='Pathogen' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Postal_code' />
        <field-sort-custom-order field='Province' />
        <field-sort-custom-order field='Farm_ID' />
        <field-sort-custom-order field='Pathogen_identification' />
        <field-sort-custom-order field='Pathogen_result' />
        <field-sort-custom-order field='Mycoplasma_result' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Percentage' caption='Count or Percentage?' datatype='real' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='quantitative' value='2.0'>
          <calculation class='tableau' formula='2.0' />
          <aliases>
            <alias key='1.0' value='Value' />
            <alias key='2.0' value='Percentage' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='barometer.csv' id='barometer.csv_C89005836844455DB6AE9380AC1F5503'>
            <properties context=''>
              <relation connection='textscan.0104jhk05ztkit17mfl0t1gpibh1' name='barometer.csv' table='[barometer#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Filenumber' ordinal='1' />
                  <column datatype='string' name='Diagnostic_test' ordinal='2' />
                  <column datatype='string' name='Samplenumber' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='integer' name='Lab_reference' ordinal='5' />
                  <column datatype='string' name='Sample_type' ordinal='6' />
                  <column datatype='string' name='Breed' ordinal='7' />
                  <column datatype='string' name='Parameter_code' ordinal='8' />
                  <column datatype='integer' name='Result' ordinal='9' />
                  <column datatype='string' name='Pathogen' ordinal='10' />
                  <column datatype='datetime' name='Date' ordinal='11' />
                  <column datatype='integer' name='Postal_code' ordinal='12' />
                  <column datatype='string' name='Province' ordinal='13' />
                  <column datatype='string' name='Farm_ID' ordinal='14' />
                  <column datatype='string' name='Pathogen_identification' ordinal='15' />
                  <column datatype='string' name='Pathogen_result' ordinal='16' />
                  <column datatype='string' name='Mycoplasma_result' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0vcntkb1ag12t4112knhl1tog42i'>
      <datasources>
        <datasource caption='barometer_long' name='federated.0vcntkb1ag12t4112knhl1tog42i' />
      </datasources>
      <datasource-dependencies datasource='federated.0vcntkb1ag12t4112knhl1tog42i'>
        <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]' included-values='all'>
        <target field='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_99BF0544185D4BB0BD4D01772A753F21]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Positive sample rate' type='sheet' worksheet='By pathogen ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Positive sample rate' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_76972BB830C344618DF7E9B8F24EBD75]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Positive sample rate' type='sheet' worksheet='By sample type' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Positive sample rate' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_64915248F23244159AF9B5BACE4DBB9C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Positive sample rate' type='sheet' worksheet='By production type' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Positive sample rate' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_B9FCDD97D11D43A1A091827F2ACA6758]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Positive sample rate' type='sheet' worksheet='By diagnostic test' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Positive sample rate' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_2BFF0569C5574F50B85522446A30AE60]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Positive sample rate' type='sheet' worksheet='Over time' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Positive sample rate' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='By diagnostic test'>
      <table>
        <view>
          <datasources>
            <datasource caption='barometer_long' name='federated.0vcntkb1ag12t4112knhl1tog42i' />
          </datasources>
          <datasource-dependencies datasource='federated.0vcntkb1ag12t4112knhl1tog42i'>
            <column datatype='string' name='[Breed]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Diagnostic_test]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pathogen]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BCV&quot;' value='Bovine coronavirus' />
                <alias key='&quot;BRSV&quot;' value='Bovine respiratory syncytial virus' />
                <alias key='&quot;HS&quot;' value='Histophilus somni' />
                <alias key='&quot;MB&quot;' value='Mycoplasma bovis' />
                <alias key='&quot;MH&quot;' value='Mannheimia haemolytica' />
                <alias key='&quot;PI3&quot;' value='Parainfluenza type 3' />
                <alias key='&quot;PM&quot;' value='Pasteurella multocida' />
              </aliases>
            </column>
            <column datatype='integer' name='[Result]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sample_type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Diagnostic_test]' derivation='None' name='[none:Diagnostic_test:nk]' pivot='key' type='nominal' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Result]' derivation='Count' name='[pcto:cnt:Result:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]'>
            <groupfilter function='level-members' level='[Breed]' user:ui-action-filter='[Action3_64915248F23244159AF9B5BACE4DBB9C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:Date:ok]' user:ui-action-filter='[Action5_2BFF0569C5574F50B85522446A30AE60]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]'>
            <groupfilter function='level-members' level='[Pathogen]' user:ui-action-filter='[Action1_99BF0544185D4BB0BD4D01772A753F21]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]'>
            <groupfilter function='level-members' level='[Sample_type]' user:ui-action-filter='[Action2_76972BB830C344618DF7E9B8F24EBD75]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Result:ok]'>
            <groupfilter function='member' level='[none:Result:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Result:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true'>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Diagnostic_test:nk]</rows>
        <cols onLeft='true' total='true'>[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]</cols>
      </table>
      <simple-id uuid='{2C94BE0B-04BC-4B70-A974-D016FA1AEB1F}' />
    </worksheet>
    <worksheet name='By pathogen '>
      <table>
        <view>
          <datasources>
            <datasource caption='barometer_long' name='federated.0vcntkb1ag12t4112knhl1tog42i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Percentage' caption='Count or Percentage?' datatype='real' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='quantitative' value='2.0'>
              <calculation class='tableau' formula='2.0' />
              <aliases>
                <alias key='1.0' value='Value' />
                <alias key='2.0' value='Percentage' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vcntkb1ag12t4112knhl1tog42i'>
            <column datatype='string' name='[Breed]' role='dimension' type='nominal' />
            <column caption='Positive rate' datatype='real' default-format='p0%' name='[Calculation_1165869355178258436]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if [Result] = 1 THEN [Date] END ) / COUNT(if not ISNULL([Result]) THEN  [Date] END )' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1165869355182714886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1 1] WHEN 1 THEN [Positive rate (copy)_1165869355181670405] ELSE [Calculation_1165869355178258436] END' />
            </column>
            <column caption='Value or Percent label' datatype='string' name='[Calculation_487233209891385344]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1 1] = 1 THEN &apos;N=&apos; + STR([Positive rate (copy)_1165869355181670405])&#13;&#10;ELSEIF  [Parameters].[Parameter 1 1] = 2 THEN LEFT(STR(ROUND([Calculation_1165869355178258436],4)*100),4) + &apos;%&apos;&#13;&#10;END' />
            </column>
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Diagnostic_test]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pathogen]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BCV&quot;' value='Bovine coronavirus' />
                <alias key='&quot;BRSV&quot;' value='Bovine respiratory syncytial virus' />
                <alias key='&quot;HS&quot;' value='Histophilus somni' />
                <alias key='&quot;MB&quot;' value='Mycoplasma bovis' />
                <alias key='&quot;MH&quot;' value='Mannheimia haemolytica' />
                <alias key='&quot;PI3&quot;' value='Parainfluenza type 3' />
                <alias key='&quot;PM&quot;' value='Pasteurella multocida' />
              </aliases>
            </column>
            <column caption='Positives' datatype='integer' default-format='N' name='[Positive rate (copy)_1165869355181670405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if [Result] = 1 THEN [Date] END )' />
            </column>
            <column datatype='integer' name='[Result]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sample_type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pathogen]' derivation='None' name='[none:Pathogen:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1165869355182714886]' derivation='User' name='[usr:Calculation_1165869355182714886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_487233209891385344]' derivation='User' name='[usr:Calculation_487233209891385344:nk]' pivot='key' type='nominal' />
            <column-instance column='[Positive rate (copy)_1165869355181670405]' derivation='User' name='[usr:Positive rate (copy)_1165869355181670405:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]'>
            <groupfilter function='level-members' level='[Breed]' user:ui-action-filter='[Action3_64915248F23244159AF9B5BACE4DBB9C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]'>
            <groupfilter function='level-members' level='[Diagnostic_test]' user:ui-action-filter='[Action4_B9FCDD97D11D43A1A091827F2ACA6758]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:Date:ok]' user:ui-action-filter='[Action5_2BFF0569C5574F50B85522446A30AE60]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]'>
            <groupfilter function='level-members' level='[Sample_type]' user:ui-action-filter='[Action2_76972BB830C344618DF7E9B8F24EBD75]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Pathogen:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='vertical-align' data-class='total' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Pathogen:nk]' value='auto' />
            <format attr='wrap' data-class='total' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Pathogen:nk]' value='auto' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_487233209891385344:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true'>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Pathogen:nk]</rows>
        <cols onLeft='true' total='true'>[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Positive rate (copy)_1165869355181670405:qk]</cols>
      </table>
      <simple-id uuid='{CFE264BB-279F-477B-B381-2C94E61B50B6}' />
    </worksheet>
    <worksheet name='By production type'>
      <table>
        <view>
          <datasources>
            <datasource caption='barometer_long' name='federated.0vcntkb1ag12t4112knhl1tog42i' />
          </datasources>
          <datasource-dependencies datasource='federated.0vcntkb1ag12t4112knhl1tog42i'>
            <column datatype='string' name='[Breed]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Diagnostic_test]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pathogen]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BCV&quot;' value='Bovine coronavirus' />
                <alias key='&quot;BRSV&quot;' value='Bovine respiratory syncytial virus' />
                <alias key='&quot;HS&quot;' value='Histophilus somni' />
                <alias key='&quot;MB&quot;' value='Mycoplasma bovis' />
                <alias key='&quot;MH&quot;' value='Mannheimia haemolytica' />
                <alias key='&quot;PI3&quot;' value='Parainfluenza type 3' />
                <alias key='&quot;PM&quot;' value='Pasteurella multocida' />
              </aliases>
            </column>
            <column datatype='integer' name='[Result]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sample_type]' role='dimension' type='nominal' />
            <column-instance column='[Breed]' derivation='None' name='[none:Breed:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Result]' derivation='Count' name='[pcto:cnt:Result:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]'>
            <groupfilter function='level-members' level='[Diagnostic_test]' user:ui-action-filter='[Action4_B9FCDD97D11D43A1A091827F2ACA6758]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:Date:ok]' user:ui-action-filter='[Action5_2BFF0569C5574F50B85522446A30AE60]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]'>
            <groupfilter function='level-members' level='[Pathogen]' user:ui-action-filter='[Action1_99BF0544185D4BB0BD4D01772A753F21]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]'>
            <groupfilter function='level-members' level='[Sample_type]' user:ui-action-filter='[Action2_76972BB830C344618DF7E9B8F24EBD75]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true'>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Breed:nk]</rows>
        <cols onLeft='true' total='true'>[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]</cols>
      </table>
      <simple-id uuid='{EDA332CF-4726-4A0C-88C1-94F7AEA44183}' />
    </worksheet>
    <worksheet name='By sample type'>
      <table>
        <view>
          <datasources>
            <datasource caption='barometer_long' name='federated.0vcntkb1ag12t4112knhl1tog42i' />
          </datasources>
          <datasource-dependencies datasource='federated.0vcntkb1ag12t4112knhl1tog42i'>
            <column datatype='string' name='[Breed]' role='dimension' type='nominal' />
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Diagnostic_test]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pathogen]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BCV&quot;' value='Bovine coronavirus' />
                <alias key='&quot;BRSV&quot;' value='Bovine respiratory syncytial virus' />
                <alias key='&quot;HS&quot;' value='Histophilus somni' />
                <alias key='&quot;MB&quot;' value='Mycoplasma bovis' />
                <alias key='&quot;MH&quot;' value='Mannheimia haemolytica' />
                <alias key='&quot;PI3&quot;' value='Parainfluenza type 3' />
                <alias key='&quot;PM&quot;' value='Pasteurella multocida' />
              </aliases>
            </column>
            <column datatype='integer' name='[Result]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sample_type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Result]' derivation='None' name='[none:Result:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sample_type]' derivation='None' name='[none:Sample_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Result]' derivation='Count' name='[pcto:cnt:Result:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]'>
            <groupfilter function='level-members' level='[Breed]' user:ui-action-filter='[Action3_64915248F23244159AF9B5BACE4DBB9C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]'>
            <groupfilter function='level-members' level='[Diagnostic_test]' user:ui-action-filter='[Action4_B9FCDD97D11D43A1A091827F2ACA6758]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:Date:ok]' user:ui-action-filter='[Action5_2BFF0569C5574F50B85522446A30AE60]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]'>
            <groupfilter function='level-members' level='[Pathogen]' user:ui-action-filter='[Action1_99BF0544185D4BB0BD4D01772A753F21]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Result:ok]'>
            <groupfilter function='member' level='[none:Result:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Result:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Sample_type:nk]</rows>
        <cols onLeft='true' total='true'>[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]</cols>
      </table>
      <simple-id uuid='{4A4233CE-8751-4031-8E1E-EB3E4C78FF5D}' />
    </worksheet>
    <worksheet name='Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='barometer_long' name='federated.0vcntkb1ag12t4112knhl1tog42i' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Percentage' caption='Count or Percentage?' datatype='real' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='quantitative' value='2.0'>
              <calculation class='tableau' formula='2.0' />
              <aliases>
                <alias key='1.0' value='Value' />
                <alias key='2.0' value='Percentage' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vcntkb1ag12t4112knhl1tog42i'>
            <column datatype='string' name='[Breed]' role='dimension' type='nominal' />
            <column caption='Positive rate' datatype='real' default-format='p0%' name='[Calculation_1165869355178258436]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if [Result] = 1 THEN [Date] END ) / COUNT(if not ISNULL([Result]) THEN  [Date] END )' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1165869355182714886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1 1] WHEN 1 THEN [Positive rate (copy)_1165869355181670405] ELSE [Calculation_1165869355178258436] END' />
            </column>
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Diagnostic_test]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pathogen]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BCV&quot;' value='Bovine coronavirus' />
                <alias key='&quot;BRSV&quot;' value='Bovine respiratory syncytial virus' />
                <alias key='&quot;HS&quot;' value='Histophilus somni' />
                <alias key='&quot;MB&quot;' value='Mycoplasma bovis' />
                <alias key='&quot;MH&quot;' value='Mannheimia haemolytica' />
                <alias key='&quot;PI3&quot;' value='Parainfluenza type 3' />
                <alias key='&quot;PM&quot;' value='Pasteurella multocida' />
              </aliases>
            </column>
            <column caption='Positives' datatype='integer' default-format='N' name='[Positive rate (copy)_1165869355181670405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if [Result] = 1 THEN [Date] END )' />
            </column>
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Result]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sample_type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1165869355182714886]' derivation='User' name='[usr:Calculation_1165869355182714886:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]'>
            <groupfilter function='level-members' level='[Breed]' user:ui-action-filter='[Action3_64915248F23244159AF9B5BACE4DBB9C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]'>
            <groupfilter function='level-members' level='[Diagnostic_test]' user:ui-action-filter='[Action4_B9FCDD97D11D43A1A091827F2ACA6758]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:Date:ok]' user:ui-action-filter='[Action5_2BFF0569C5574F50B85522446A30AE60]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]'>
            <groupfilter function='level-members' level='[Pathogen]' user:ui-action-filter='[Action1_85984BB5CDDB4EA7ABAC1D3D06F48B85]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]'>
            <groupfilter function='level-members' level='[Sample_type]' user:ui-action-filter='[Action2_76972BB830C344618DF7E9B8F24EBD75]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[Longitude (generated)]' field-type='quantitative' max='873114.65175773064' min='11494.319217492506' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[Latitude (generated)]' field-type='quantitative' max='6795227.2472016737' min='6307922.5386481835' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]' />
              <lod column='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Province:nk]' />
              <tooltip column='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]' />
              <geometry column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vcntkb1ag12t4112knhl1tog42i].[Latitude (generated)]</rows>
        <cols>[federated.0vcntkb1ag12t4112knhl1tog42i].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3F22D351-6F42-409C-8196-FAA71FDD793C}' />
    </worksheet>
    <worksheet name='Over time'>
      <table>
        <view>
          <datasources>
            <datasource caption='barometer_long' name='federated.0vcntkb1ag12t4112knhl1tog42i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Percentage' caption='Count or Percentage?' datatype='real' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='quantitative' value='2.0'>
              <calculation class='tableau' formula='2.0' />
              <aliases>
                <alias key='1.0' value='Value' />
                <alias key='2.0' value='Percentage' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vcntkb1ag12t4112knhl1tog42i'>
            <column datatype='string' name='[Breed]' role='dimension' type='nominal' />
            <column caption='Positive rate' datatype='real' default-format='p0%' name='[Calculation_1165869355178258436]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if [Result] = 1 THEN [Date] END ) / COUNT(if not ISNULL([Result]) THEN  [Date] END )' />
            </column>
            <column caption='Value' datatype='real' name='[Calculation_1165869355182714886]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1 1] WHEN 1 THEN [Positive rate (copy)_1165869355181670405] ELSE [Calculation_1165869355178258436] END' />
            </column>
            <column caption='Value or Percent label' datatype='string' name='[Calculation_487233209891385344]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1 1] = 1 THEN &apos;N=&apos; + STR([Positive rate (copy)_1165869355181670405])&#13;&#10;ELSEIF  [Parameters].[Parameter 1 1] = 2 THEN LEFT(STR(ROUND([Calculation_1165869355178258436],4)*100),4) + &apos;%&apos;&#13;&#10;END' />
            </column>
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Diagnostic_test]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pathogen]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BCV&quot;' value='Bovine coronavirus' />
                <alias key='&quot;BRSV&quot;' value='Bovine respiratory syncytial virus' />
                <alias key='&quot;HS&quot;' value='Histophilus somni' />
                <alias key='&quot;MB&quot;' value='Mycoplasma bovis' />
                <alias key='&quot;MH&quot;' value='Mannheimia haemolytica' />
                <alias key='&quot;PI3&quot;' value='Parainfluenza type 3' />
                <alias key='&quot;PM&quot;' value='Pasteurella multocida' />
              </aliases>
            </column>
            <column caption='Positives' datatype='integer' default-format='N' name='[Positive rate (copy)_1165869355181670405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if [Result] = 1 THEN [Date] END )' />
            </column>
            <column datatype='integer' name='[Result]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sample_type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1165869355182714886]' derivation='User' name='[usr:Calculation_1165869355182714886:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_487233209891385344]' derivation='User' name='[usr:Calculation_487233209891385344:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]'>
            <groupfilter function='level-members' level='[Breed]' user:ui-action-filter='[Action3_64915248F23244159AF9B5BACE4DBB9C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]'>
            <groupfilter function='level-members' level='[Diagnostic_test]' user:ui-action-filter='[Action4_B9FCDD97D11D43A1A091827F2ACA6758]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]'>
            <groupfilter function='level-members' level='[Pathogen]' user:ui-action-filter='[Action1_99BF0544185D4BB0BD4D01772A753F21]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]'>
            <groupfilter function='level-members' level='[Sample_type]' user:ui-action-filter='[Action2_76972BB830C344618DF7E9B8F24EBD75]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[tmn:Date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]' scope='rows' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <text column='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_487233209891385344:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]</rows>
        <cols>[federated.0vcntkb1ag12t4112knhl1tog42i].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{135E70B8-1AF4-4DD0-A97B-79BFF4F639E7}' />
    </worksheet>
    <worksheet name='Total'>
      <table>
        <view>
          <datasources>
            <datasource caption='barometer_long' name='federated.0vcntkb1ag12t4112knhl1tog42i' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Percentage' caption='Count or Percentage?' datatype='real' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='quantitative' value='2.0'>
              <calculation class='tableau' formula='2.0' />
              <aliases>
                <alias key='1.0' value='Value' />
                <alias key='2.0' value='Percentage' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0vcntkb1ag12t4112knhl1tog42i'>
            <column datatype='string' name='[Breed]' role='dimension' type='nominal' />
            <column caption='Positive rate' datatype='real' default-format='p0%' name='[Calculation_1165869355178258436]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if [Result] = 1 THEN [Date] END ) / COUNT(if not ISNULL([Result]) THEN  [Date] END )' />
            </column>
            <column caption='Value or Percent label' datatype='string' name='[Calculation_487233209891385344]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1 1] = 1 THEN &apos;N=&apos; + STR([Positive rate (copy)_1165869355181670405])&#13;&#10;ELSEIF  [Parameters].[Parameter 1 1] = 2 THEN LEFT(STR(ROUND([Calculation_1165869355178258436],4)*100),4) + &apos;%&apos;&#13;&#10;END' />
            </column>
            <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Diagnostic_test]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pathogen]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;BCV&quot;' value='Bovine coronavirus' />
                <alias key='&quot;BRSV&quot;' value='Bovine respiratory syncytial virus' />
                <alias key='&quot;HS&quot;' value='Histophilus somni' />
                <alias key='&quot;MB&quot;' value='Mycoplasma bovis' />
                <alias key='&quot;MH&quot;' value='Mannheimia haemolytica' />
                <alias key='&quot;PI3&quot;' value='Parainfluenza type 3' />
                <alias key='&quot;PM&quot;' value='Pasteurella multocida' />
              </aliases>
            </column>
            <column caption='Positives' datatype='integer' default-format='N' name='[Positive rate (copy)_1165869355181670405]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT(if [Result] = 1 THEN [Date] END )' />
            </column>
            <column datatype='integer' name='[Result]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sample_type]' role='dimension' type='nominal' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_487233209891385344]' derivation='User' name='[usr:Calculation_487233209891385344:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]'>
            <groupfilter function='level-members' level='[Breed]' user:ui-action-filter='[Action3_64915248F23244159AF9B5BACE4DBB9C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]'>
            <groupfilter function='level-members' level='[Diagnostic_test]' user:ui-action-filter='[Action4_B9FCDD97D11D43A1A091827F2ACA6758]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:Date:ok]' user:ui-action-filter='[Action5_2BFF0569C5574F50B85522446A30AE60]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]'>
            <groupfilter function='level-members' level='[Pathogen]' user:ui-action-filter='[Action1_99BF0544185D4BB0BD4D01772A753F21]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]'>
            <groupfilter function='level-members' level='[Sample_type]' user:ui-action-filter='[Action2_76972BB830C344618DF7E9B8F24EBD75]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Pathogen)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Breed)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Sample_type)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (Diagnostic_test)]</column>
            <column>[federated.0vcntkb1ag12t4112knhl1tog42i].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='366' />
            <format attr='height' value='142' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_487233209891385344:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.7734806537628174' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{90830136-5950-47A7-A417-4A3A48DEEEDA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Positive sample rate'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='barometer_long' name='federated.0vcntkb1ag12t4112knhl1tog42i' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Percentage' caption='Count or Percentage?' datatype='real' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='quantitative' value='2.0'>
          <calculation class='tableau' formula='2.0' />
          <aliases>
            <alias key='1.0' value='Value' />
            <alias key='2.0' value='Percentage' />
          </aliases>
          <members>
            <member alias='Value' value='1.0' />
            <member alias='Percentage' value='2.0' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0vcntkb1ag12t4112knhl1tog42i'>
        <column datatype='datetime' name='[Date]' role='dimension' type='ordinal' />
        <column-instance column='[Date]' derivation='None' name='[none:Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='8' param='horz' type-v2='layout-flow' w='99064' x='468' y='893'>
            <zone fixed-size='382' h='98214' id='3' is-fixed='true' param='vert' type-v2='layout-flow' w='22352' x='468' y='893'>
              <zone h='21540' id='5' name='Total' w='22352' x='468' y='893'>
                <layout-cache fixed-size-h='185' fixed-size-w='366' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='362' h='41295' id='11' is-fixed='true' name='By pathogen ' w='22352' x='468' y='22433'>
                <layout-cache minwidth='260' type-h='cell' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='98214' id='10' param='vert' type-v2='layout-flow' w='52078' x='22820' y='893'>
              <zone h='6250' id='14' name='Over time' param='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='52078' x='22820' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='340' h='38839' id='13' is-fixed='true' name='Over time' w='52078' x='22820' y='7143'>
                <layout-cache minheight='173' minwidth='141' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53125' id='15' name='Country' w='52078' x='22820' y='45982'>
                <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='421' h='98214' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='24634' x='74898' y='893'>
              <zone h='6362' id='17' mode='compact' param='[Parameters].[Parameter 1 1]' type-v2='paramctrl' w='24634' x='74898' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='249' h='28683' id='12' is-fixed='true' name='By sample type' w='24634' x='74898' y='7255'>
                <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='314' h='35938' id='6' is-fixed='true' name='By production type' w='24634' x='74898' y='35938'>
                <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27231' id='16' name='By diagnostic test' w='24634' x='74898' y='71876'>
                <layout-cache cell-count-h='2' minwidth='180' non-cell-size-h='43' type-h='cell' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='24' param='vert' type-v2='layout-flow' w='99064' x='468' y='893'>
                <zone fixed-size='164' h='21540' id='5' is-fixed='true' name='Total' w='22352' x='468' y='893'>
                  <layout-cache fixed-size-h='185' fixed-size-w='366' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6362' id='17' mode='compact' param='[Parameters].[Parameter 1 1]' type-v2='paramctrl' w='24634' x='74898' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6250' id='14' name='Over time' param='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='52078' x='22820' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38839' id='13' is-fixed='true' name='Over time' w='52078' x='22820' y='7143'>
                  <layout-cache minheight='173' minwidth='141' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='222' h='28683' id='12' is-fixed='true' name='By sample type' w='24634' x='74898' y='7255'>
                  <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41295' id='11' is-fixed='true' name='By pathogen ' w='22352' x='468' y='22433'>
                  <layout-cache minwidth='260' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='279' h='35938' id='6' is-fixed='true' name='By production type' w='24634' x='74898' y='35938'>
                  <layout-cache minwidth='180' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53125' id='15' is-fixed='true' name='Country' w='52078' x='22820' y='45982'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='210' h='27231' id='16' is-fixed='true' name='By diagnostic test' w='24634' x='74898' y='71876'>
                  <layout-cache cell-count-h='2' minwidth='180' non-cell-size-h='43' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6EAD4FAE-3A9E-4A1C-8360-8629BF12BC27}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[cnt:Filenumber:qk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Country:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Filenumber:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_1165869355182714886:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC515CBE-4F8B-4EDB-B345-E114C7A35B39}' />
    </window>
    <window class='worksheet' name='Over time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card param='[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Calculation_1165869355154268162:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Filenumber:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Pathogen:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Sample_type:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_487233209891385344:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{227F6E0F-3DE4-49C6-AAB6-3247727CCD6B}' />
    </window>
    <window class='worksheet' name='By pathogen '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Calculation_1165869355154268162:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Filenumber:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Pathogen:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Sample_type:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_487233209891385344:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A7375AA-8DDF-4093-84F0-F31B8776A9C4}' />
    </window>
    <window class='worksheet' name='By sample type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Calculation_1165869355154268162:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Filenumber:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Pathogen:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Result:ok]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Sample_type:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_487233209891385344:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CF0023E-CB0B-406E-B7D5-DF95FD27D084}' />
    </window>
    <window class='worksheet' name='By production type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Breed:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Calculation_1165869355154268162:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Diagnostic_test:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Filenumber:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Pathogen:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Result:ok]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Sample_type:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_487233209891385344:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CBA4B3C-737F-4CD9-B2B0-0894CD5097CA}' />
    </window>
    <window class='worksheet' name='By diagnostic test'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Calculation_1165869355154268162:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Date:qk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Diagnostic_test:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Filenumber:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Pathogen:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Result:ok]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Sample_type:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_487233209891385344:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C05FB817-CB58-422D-857D-30456EDA67FB}' />
    </window>
    <window class='worksheet' name='Total'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Calculation_1165869355154268162:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Filenumber:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Pathogen:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Result:ok]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[none:Sample_type:nk]</field>
            <field>[federated.0vcntkb1ag12t4112knhl1tog42i].[usr:Calculation_487233209891385344:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C5C0F97-513E-437F-A294-D33FA44C6A5F}' />
    </window>
    <window class='dashboard' maximized='true' name='Positive sample rate'>
      <viewpoints>
        <viewpoint name='By diagnostic test'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='By pathogen '>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='By production type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='By sample type'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0vcntkb1ag12t4112knhl1tog42i].[pcto:cnt:Result:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Over time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total' />
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{16E20CBF-E896-4162-899F-7AC6B4D6B16E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='110' name='By diagnostic test' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='By pathogen ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z3Rc2XWo+d1QORcKVciRSCQIgjmzmZud1N3qlmRZsi3LI8eZWctrftj/
      nt7M8ppZy8/rvXl+smVbsiXNU04tNTuRbGaCJAgGECCInHMooAqV64b5AZDNAHaTTba6Sda3
      Fn8Qde69555797l777P3PoKu6zoZMjyliJ92BzJk+DTJCECGp5qMAGR4qskIQIanmowAZHiq
      yQhAhqeajABkeKrJCECGp5qMAGR4qskIQIanmowAZHiqyQhAhqeajABkeKrJCECGp5qMAGR4
      qskIQIanmowAZHiqyQhAhqeajABkeKrJCECGp5qMAGR4qskIQIanmowAZHggUqkUj0slHUVR
      UBTlQ9tkBCDDA6Gq6qfdhftG0zQ0TfvQNvLvqC8ZniCm5mKfdhfui3Q6DQIY5PQ922QE4CYa
      8dAskbSEy+vGKGjE52eYS5jx+x1In2bP5sfojTlYFrB/ir34gD//h4Oo2uOhBn0U960Cxac7
      OHXoEIcW/x0+epKrPZMkP/wLcx+kmepup29qnk93TBWmuppputLJfBrQFSZ7mjjdOEDi0+wW
      oA6e4ScNIzf/n5ho51Jf8FPs0ZPDfQtAdPw6Fy4MoNhs2Gw2zLJC7/nDHLs8TOqhupBi7NoV
      2sfCn7IAPD7Eh5s50zH1aXfjieABVCAZu7eU1Vu3kgvoWpqJnrOcPHOJ0ZoC8pUhmk6e4kLH
      IHHVgKd4Fbt3b6Ys24aoKQSHmjl2+DQ9MwkkSxar977MptwE5w//imMXh0ld7OTK20ZM3kK2
      7n+FjSU2lOB13vjlIXpnFVyFK9m1e8uCGpCM0nHxKKHc3WwqtQGQiLRz5s1ZVn55M34mOPM/
      W8h+dQvu4Qu8814POdt2s31NCWKwg3d/+TZdsyq2/FXs37+FMp8NUfio+08z0Xqad041MxVK
      Ilh8rNixj911hZik2w9Odr/PD3uzWC93cKp5gKhcwO7Xnidr7CzHGq4xlbRTs/M59tUXYSZK
      V8tVZqRi1tTlYwQSc+O0NF/AvfIlKry3nniKpmOHOXbmMiPpNv6fKxYw+Vm3az876gswpOdo
      PPgzTnXOIthzWbdrL5uqchf7pxIaauXE0dN0jEdxFNSx68BuqrKM9/8KPIF8bBtAEA24s8vJ
      sh4kGAZfPIhSuJavbH8Zixin+9x7HDl2gVef24pLn6Tx2Bls67/An1e40CPjdHQHUaor2PbK
      H+CQ3mG0eDO7l+ciSyKybESducpPf3GFgu1f5ECRmZHm45w5dR7r3u3kmlWioUlC7g88EpoS
      Y2Z8bvFrlGJ2bJLE9cOcuKiy4fOvUZ1jR4528Iv/eZysfV/mLwrNjF05wlvvneerr+0gy/JR
      dxxnYkZi88tfI99tRJm+xm9+/ianPX/InhLHbS21yAStDe3kvfgcX/7TF4hf+Q3//K/fomrb
      Sxz46nass838+MgVhpb5qbCpxOZDzElJbmiTmpIkHJzCeKftZsyifs9rFLh1fjpdx5/uWQaC
      iCwbkJUpTvzgB/QVv8DX/6oQfaadI2+9ySH9VV5a7mOu/wrvHLuMt/4F/uz1bCLjXQyMTkNW
      3sd9BZ4IPrYAaGqSmbEOgqliKpxgz1nF9pu/2lixoobGk+PMx1M4jSl07Hg8dkxGC8bscjb4
      F5saTRhlCYPRhNlsQRYB0vS3tiOv3MLmqhyMkkDV+k2M/KaJkdkQgVzTffRwirZWI/u+/Hmq
      nSKgM9V4lrmVz/GFmhxEoGLLLtZ0HqRtNsl2i+Ejzuek7pkdH/y3aDUbK09xfjQOdwgAoox/
      zT4OrCsDwJPjQ6qq4qt76xZ+l7JwRgYIfoSP+i4EEdlgwmSQEWUjFssHUpvsvswFaQN/ubca
      G4B9LS/sGuNbTV08W2lmeGgIc9EWttaXYBfBWV7P0/3qL/AAAqAQnurk7BFwAugKsfkEeeu3
      k2cFlDiTA110DE2RVHSYH2VyRCSsKJS4fBSW2Gk99z7TDgdOb4Dq2hr8tntdPsLkRIx55SrH
      o/2L6kmS0ZEh3JWr0XLuRwCMVO7Yv/jyLxw/NjxDUmnh6JHOxb/pTM73IU1q3M/bkAyN0N7W
      zUw0jQZMD8wxJYUA/0cdejeaxqM0eYITY3hLdi68/IvYi8sIvNnBWCpFJJHElp+DPbPycxsP
      9AUQRBmj2YwZEGQzxSsqKc11IpNitOU0pzoieHKysJpFSBkQxYWPumS0U7VxP86BfkYmZwmP
      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
    </thumbnail>
    <thumbnail height='170' name='By production type' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='150' name='By sample type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO292XMcSZof+IsjM/LEkYmLJECCJMiqYlV1dVd3ddfYtI21HkajMdnItE+r
      N/0D++esHiTbF9m+7IN2zTSm0Y60MzVH96jV1V0ni2SRBRIgAeIG8j4i4/B9SHyOLz09IiMB
      kFUk8aPBmBkZ4eHh8d3++efGzs6OMAwDP2QEQYAwDMH7GYYhbNuGaZryWDabRafTGbg2k8nA
      cZyX1tcLnD/a7Tba7TYAwDAMCCG059FxwzBiz6NzLMuCTSf/UECErutTGIZIpVLwPE+ew8+z
      LAumaQ48eC6Xg23bL6XvFzh/dLtdSfwAtEQthJDHhRAwDGNAMOoQhiEM08APijI4B3NYliWP
      FQoF9Ho99Hq9oes7nQ6y2awcsEwmc0H8rzB830e1Wk18vpT8Cc8VoUA8m7xkEPeqIHVlWRba
      7TZM08T09DRyuRxM04Tv+xBCIAxDBEEgCT+fz38PT3GB84Dv+9jf30cQBEO/kcQXQsA0zUiL
      QXcd1w5CnAMDhGEYa2uNC67Kotru9Xqo1WoIgkAyged5CIIAruvCsixMTk6OVIMX+GFACIF2
      u41utyuPVatVhGEYeQ0JRKIRIQRSqRRM04QZwwxhGPbPOWacM1GIEAKdTgee5w3cIK7jcSAu
      jiJ80gSEVquFTqcjCT0IAliWhWw2e0H8rxC63S6EEPB9H61WC2EYolQqYWJiItIi4EQshIBl
      WZEWhA6mafZN693d3VNHgXQ2OxH/aQiQOzMAkEqlBjg9k8kAOBkwx3EQhiHS6TQqlQpSqRQm
      Jyd/UE79BeLheR4ajQaA/nudmpqCYRio1+uYmJiAaZqoVCpDppDq2wVBIBmA/w/0aZGCK8Q0
      BEmlxIHjQLW96MZnIUC6lh6AOD2VSsF1XXS7XRiGgVQqJRnBNE1MTExcEP8rCNu25TszTRPN
      ZhPdbhdBEKBWq8H3fZTLZRnKNgwDtm1DCIEgCOQfCV6iBw4uVFX6kGxEDQGQUnVcRBFfXGiz
      1+vJ0CWpJWorDMMBu5Dg+z6CIIBhGNLWv4j1v5ogYea6LjKZDLLZLHq9nrQG2u02giDA9PQ0
      ms0mms1m3z8UAp7vwTItbdhTnQeIok3JAGRmqBNOSUHOBYGbM6PaI+4Nw3Ag5BkF27ZhWRZS
      qRRyudzYfb3ADwuFQgH5fB5hGOKwcoTAPxHEFNwIwxCO42BychLNZhO2ZUGE9oDFoEKlR6Iv
      DpvbRsQEQN8eI5s7CTzPk1443ZA6FjWpRR0izTOO31AoFJBKpS5MntcEhmHA8zz0ej2kLBtW
      KiXD20EQoNPpIAgC9Ho9ZDIZ5HI5eJ4nBXa32+3P7No2Wq3WQNtcGKfTaek0h2EIm4iPnM0g
      COD7/lgmBXUiCAJJxKOImWZzU6mU7FBSpNNppFIp+XAXTPDqg3xQ27KlSUymEZkz9Lnb7aLX
      66FQKAwRezabHTJ96LtlWeh5fZO70+n0U2noRLKrLctCKp0eiyBlSCkhIaqRIhmTTaABKBRK
      dmK9Xh8Iw17g1YRhGMhkMpIG1HdKji+FyIMgkA40Hfc8D5VKZWCijIfkwzCE1/Pgdl153E6l
      UgO2v4AATjGxNS7DkCrippLjOOj1erHzCNwxSqVSA9rgAq8uyArIZjNotVoQQsh0FyJyTvCU
      JpHNZtFqtbTJb8RMnJ6GEiqBE/MHAEIRwrZefP4MSXLHcdDpdKSKKxQK6HQ6sSFZzvWFQuGF
      9/UC548wDNHpdhD4fZObIkDZTLZvjRw7wrrYPR0n3yCfz8vIUHhshlN2gDoxy5MlwzA820TY
      WWDbNorFIrrdrozn5/N5pFIpmQCVYo4QABn6pIeYnp6+kP6vGIIg6Kc3dzoDKQuhCJHN5lA8
      Fmi9Xg+u60rTnIOslTAMBwQlBVwoP4zPHbiuKz9ThnAQBN8fA9CEhud5sG0bmUwGvu9Lp5ge
      jOYBKNENAPL5PPL5/EWm5yuISqUyQLQDk1phiHQ6hWKxiJR9EuRoNptodzpQqVSdhFUzCXzf
      h2EYSKfTJwR/zDjkYxibm5uCiPFlMgIPjxYKBenZW5aFiYkJhGGIZrM5MDknhMDk5CSy2exL
      6+cFzhfVahVCCOm7kcCjWV9CNpuViY5A//0fVSrwjye/koACJURnNIfAnWOTGj9NRif3tHVp
      q3EwLQupdH8iizgzn89jampKTnTRn23byGazmJubuyD+VxyFQgHFYhFhGOLbb79FpVKBYRhD
      vlyn08HR0VE//n88yZrP5xLl+gOAH/gQEDAtUzIR+ZpE76E4doLJaRgHPB2B2tAhajbYAJBO
      peWMrgrK7xm45iLe/8oiDEMcHBxgZmYG+/v72Nvbw+3bt7GxsYHNzU1ks1lMT08PCGIyf9Bs
      olgsIpvpCz/XdeH1Roe+DdOEYZiwjwM8lDFKDJBOp0+/IoxydziBc3XDNYNpmtLEIhuMT7h5
      njeQB0TtXeDVBlkIRBudTgd3796Fbdu4c+cOTNPEysoKut0uVldXYVlWZPSvXq8jCAKk02l4
      podsLguIPjPowuaWaUGEAbjjQOcFYQDTsnB0dNT3AdTF5aPg+77M/aFG+UQYhaho4Xomk4Fh
      GMhmswNhLcMw0Ol00Gw2YZomSqXSBeG/BgiCQPpvZBqTlufmLiGVSqHZbGJ1dRVLS0uxbWdz
      WaRTaTRbTXi+j6mJSbg9F91Od4h2OAMGQdBPnxf9sOjmxiZKpdLpNAARPldXqjbgq3Wy2axk
      EJIE6XQanufJqWyez32BVxc0O88nsSjPh6Ner8vPU1NT/cjPcS5Z3ERou9UGckAhf5IL5jgO
      spmTiiAU5ZERH99DNpPF4eEh2u02DMPA7du3Yds2bD4pEGfH88UFAoMxel04ksJPAFCr1ZBO
      p5HNZmVOP1/pD+ClR6Eu8OKgEj+Zy0EYwDSGaaxWq0kmIAfZMAz4vi8dVwJZDZ1OZyAhcmNj
      A5VKBaZpIpvN4tq1a/3rux0c7h7C8z0szC+gWCzCsizJLPaoWLoaWwUA65hRKITFp6HjiJhC
      UDp4/kU+z+sATvSE4kQRlmnhqFrRanlKbymVSvjuu++kNWDbtkyV1tFNs9mEZVmoVCrodru4
      du0aDNOAZVp48uSJbPvSpUsDfiefWZYTYVHmh+/7UsLTxS9iva1hGiiXyhda4DVAq9VCt9tF
      Op2WsXyisXanjVazFfme+TVCCDx+/BhCCFy9ehWdTmfIPEqn01hbW8PVq1elv0Eah88DcAHN
      o47G1taWiMq3ACC9cm7zk61mGAYmJibQarWkzXVaWLaN6eP1oBd49RHnzx0eHSIMYgonGMBM
      eUb6Do1GA0+fPsXc3Jw0kUzTxM7ODprNJq5evarVEJ7nDR1XAz7G5uamAE6qqgEnyxF5yFIF
      LVinnG2ZXno8tU3mked5SKfTQ1PQKrLZ7EVi22uCuCWwAFBv1LVRm1CEMGDIqKEf+Mg4GelL
      fvHFFwAAx3Hg+z6uXLkifdEocCag2D+/r63mTatrgbla4TnZ9JCu60qitm1bli7ki9ZpvScA
      6bTwym6UFXqB1wO+78euKc/n8jBNC5ZpotFsyvT7bCaLTCaDVCqFeqMO3/PR9JowLRM72ztI
      p9O4du3aQHg1ivjJIuGrv4ATH5WEs7GxsSF04UzK16dFMhTTpzxtCmvywkQ0mUVt8ExOajt9
      vNiGmIUy+oQQF3U8XxOME87u9XoIhYB1XPmDHGDTNNFqtWCaJra2tqRvkKQ9EsIA5CSs2i9i
      Im1xXCJsagA4WfDCF7Cr1xBX2batzS+iKg+FQkGeS+Eox3HGWlRzge8fqlQFgJ7Xg2VaMvuy
      5/XQc3sIwhCp45wuLuRIUwgh0Gq30T6eFyJTxfM9tNttlMvlRPlmfPE7L5lCzq/aZ+kDACfE
      ThKd7HiCbkIjqhN8UEgzZDIZaQ6FYSjNIMdxUCwWLxzgVwhBEKDZaqLT7cKAgdxxagKlr3M/
      ksMwDJRKpQFHtNPtoNloRt7L8zwcHR1hfn5+ZL9c15V1pChjARimSdu2KappDthFBP6Z4qek
      nnQet8ooKoIgkLO+PJSaz+cviP8VAs3kHx4dodvtwoQB0zAQ+MGA3R8XVm82B4k942SQz+cj
      aYDSpimVOq5vwEnEkmsasnQ4rctF8fwgj5eSCuErsnQLD8i25w/AQ6vkNJM6ospfU1NTMj/o
      Aj98BEGAer2OZrMJA4BpnAhPz/Pgui4mJiakKUvBDdL+juMcpzUPVu2mVVrFYjHyvhRuj0u9
      J6ajWWQyhXgUiNJ0yFeVLCJDnmEoZ3qJk3iSW9RMHkV5yCtPp9PSzOFT47Tqi+o+XuDVQBAE
      suICgdNCGIayxmcmkxmIwtDKP8uykE6nJSFTWgLBcRzkcjk0Wy2YxmCNT07EvJaVCj4TTYEb
      Mt1pnQmHTREbIQRgIHbZGTCc92+aJorFosz+sywLU1NTcBxnKORE/kMul7uQ+q84eFoBEbhh
      GGg2m5idnYVlWajVagPvOQgCGZcnAqXliul0GqZpykigHwQQxwKYEtjIguBWCG+fMwn9Rj6A
      4zhDFg4AGJVKRdDUcL1eT1zanDxqx3Gk/UbT37xC3AVeH7iui1arJSu0RSGTycg0BHWxE5nV
      akqCbdvI5XLa+aBer4e9vT24ritLKNJ2WdyuJ/OIwqg8EY+D+wPG8+fPBQBpn6lZmipoYmFh
      YeFCir+BCIIA1WoVnU4n0ftXJ8QomKL6jMGxWTM3O6ttt9fr4ZtvvsHVq1elaR2IEOlUWq74
      AiAjQJwxyOcEBteiZ7PZ/kwwzcxOTEzIixuNhuQeXluF0pwp75tWfPHqbsTFLypx7gLfHyzL
      QrFYHNqNUz0nap05TaAOh0f75jdVfFNBVkU2mz2pGC76a38BASftSGa7/+ABNnd28bzt4a2Z
      SfzRzz8a2GUS6BP/wcHByUSYEELW40mn0ygWi1KF+b6PWq0mH4hiqO1uByLoJyYFIoRpGDBg
      oFKpSIcnDENMTU1d1O95jZBOp5HP57XWQiaTkb/pmISiMPw7AJjHVTrb7fbQWnA678aNG3j+
      /DmuXr16XA2uv/Qxny+g57r4q3/4DX67VUE3NwEUpiDSAZY7jYE2SIBXq1X8h7/9pz4DqGHN
      Xq8Hz/PgOA5qtRry+bxcrkgaodPpwDRMhMZJnUYBIGBRIMuy4LouarWavP7CbHo9QEKt1WrB
      six03S4mJiZQyPdL3IxaZkuhz0wmIyu8ua4L13XRbre1aQ+0kIWsDt/3kck7eL65if/w95+i
      fekGMNfPMjAAiFYDd/7oHRiGIe+TSqWwt7eHv/7dZzgsX+2XR9dBCCFVjcrNPJ8COCl1Tsfz
      +bzkYtu24TgOut0uqtUqUqkUSqXSRdrDKw7DMORiFX4M6Au/RqMRK+zInCGhalkWTMtEp92R
      jjbRDW2E0ev1UCwWsbu7K53hIAiwtLSEmvUVUizvXwgBYadRrdWwurEJ07QwPzWJyckJPHny
      BI/sSQggek0wDxfxsJIafuKzbxQBoskQuRCZ2YOe52F3d1eGu6jA7YVmeDWhe2+2bWNqakr6
      kTqo79w0TeRzeXg9D77vy5KZhDAIpWVCk1jkT2xvbyOdSiFUwpxmJov/47NHCGcvQ0Ag2NtH
      2F5HyhAwJkqAEHoG4DNq/DOfCeZO78TEhCRmnlpB3jqlRZNzQ8cpGc6yLExPT18wwSuAflHb
      bj/YcRy718Fx+k5pEIaoVCpDFcdp4pSyi2mSampqCp1uB67bQ3CcJUzMIkS/ghytGxFGP/mu
      XC5jwghRMwyEx+YPgL5JPnvlmIYBy07BnpyW9wWUZDgCcRipGB7KImnO92eiJLdUKiUL3FJa
      qu/7cvKD4sc6X+A8EuKov67rQgghX8IFzgaK3ZPACsIAQvTXhmdzWeSyOTnrGnU9+QrkG/J9
      AKrVKmzb1u7tzDWI67rY3t6GZVkol8snOf2Ggc2tbfy7Lx4jLEwNmONxuUPAsQnEJwzINifJ
      z3OpOQzjpAwK+Qfdbldme9KiCJq9C4IA2WxWhln5jB4AuSYgKoFKzSc66cfJ1jpqpWDXdTEz
      MxM7ABfQgyQzVXMeyP0yTJky0Gl30G615WyuzqSleq86UHaA7/toNBoDewMTfdB7rdfr+C+f
      folKx0UqmwXcDv63/+VfIggC3Fi+hg8erOLLMQMtNnCyjJE/vHxYVqdlwP4XAgLDWX80dc23
      t+FT2I7jDDABbXuqZgNSbRkaAGLOKI6mQeL9uXC0k4FSWIC+lH30eBX7nSYq7Sben1/C7Ozs
      yP0aKJLTbreRdtKYnIjfspZWElLZcqAffaxWq0il0xCiv1DK7bnwfB+FXB65XA73PRvh9CwA
      QIRN/OdP/hEL05PYarTwu64N5zjaPkryyzwl9WT1wmHJb2jVCz+mU2OpVEoyBg0Y0J+QSKfT
      Axui9Xo9KXV4OI3vQaZ7IDKvKAHqYpllPGgDCdM08d3jVey16qgHHqYWZuFMlnHJmMHWky0s
      LCwk3kPaMAx4PQ+1Wk1uedTr9aSAC8MQh4eHA0zH4ft+f7Y4DOAFfZpI2SlYpoX/+Nd/i6Dd
      hlHs2/FGroDfGAbCoxCGkUe6MLrQs5qxbPPtUXUzt1FETuAmE6Cf/aVB4M4xcSBthEDHAUiN
      oZpjvE+qdCEblHJKAFxUko5BGIZ4vPYEe40a6kEPkwuzsPLTmD7+Xb4fxC9vjLK1KfmRUh/I
      lKLo4Kilr/0S6AZCEaKYL+D//c3/wLPCLKbsLo6qB7CmZgZMYV2imw7qOTYwbD6oXKIygVoC
      JYpQ6Xy+BRMd42aV2kEeYSIHmiJMQvTLWpswh/pgWRZyudxFdYkICCHQaDTw4OkT7LcbKM7N
      wF4oSaLnMIx+BbZcLquV/mSS0qpBqvihziuRUOK2flIb3TJN5DM5fPPtQ/y+a8HIWUA2B3Nv
      ZyAsz/vMP6uhfN14SB9ANyGm1vuMugkNkE6l8Y7GdZjOVTtKFYN5yjZfiEEgidLutAc2VrhA
      H0II3P/uIZ53G8iVpjA1rV+BpQqVMAiH3nkmk+m39+g7/P7ZNlqui1/dWsad27fkDC1fjghA
      5uNzSyAOZMIeHh7iLx9vwyzNyfZy+Tza9QpEcSry2iTjIYTorwfge2+ppoaae81zOVQVROVQ
      dG3Q57gOqQ9BkmVgwkRTW5KDl2S/QB/VahVfPH4Ia2YS+fz08U6gJ7/rND9pXe/YVicJblkW
      9vb28L//zT8Bl64B6Uk4RQf/absJ++u/wo+mc/iTn/8M01NTct5ILWEeFZygNQbZbL88yr1v
      H+IvV58jLM0PXJ+emYex9Qw134NlD+eYDfi0EDiWm0PPCxzvFM8LYvmBLyWsSrgycYmdr0sz
      pe+jPHFqO04r0LGkER3DMOUcxJsOIQTuPXqIrV4ThUsz8pihWfmkG3fTNPFgdRXvXL+JfD4v
      51cKhQKsfBEWm8yynAzE4g18BYHP/+EPKAof02kbH9+8indurchZ2ygNYBj99QG0kOo//90/
      4ks/DVMhfoLrB1rip/7EPRf/bUBMhmEIobmIEzeXyHyeQL0xv7lu4ivumPqn5nfHwTSMxBGL
      1xnVWg1/9/nvcJQB8qUTUyEqihdlI2fn5/Dv//oTPH/+XK7rzWQyyIeePGfwD7BmFtCeXcTz
      yQX8X88q+E9/92u5IksVZGRSUbsHBwf49//1b/F1ahpmvqjtVxAE8JGMHlRaUmGrJ9vGSQd1
      qpHO4x2jGjAUAeIm00AdRsUx4f9HaRse++e+RBze5J3jXdfF47U1bHpN5BdmIrVwnMPIMVOe
      xDcNC//x9/cw8eUDtHseOsKAUZxGlJHJ75nOF+B2vYGFMNzntG0bG5ub+H9+/xVcmHCdHIzZ
      pX4brE9c8Nq2DREEMDC4BphHIoFhE119XsMw4jfI4Lt78JvoBpVXhFNvqg62GqtVi3Dprksa
      5nqTsXewj682nsAq5JCPcBCjoGMCz/PwxXdbsKYXERYnUT0+18Lg4vRRyKdsmSvmui42NjZw
      6dIleJ6Huw8e4K83DhEsXO+fHEFfWv8kwreME5jaMCiBz/ryFWBR0jpKequd4efrIj8qg8Th
      wrnV48HqI2z2msjOlsYaTw713FQqhYNOiMx0NJGN0shCCHxdaWH9v/wN4HmYhodr0xP4w917
      WG/30JpegDk9l8gXHAzEmPC8HpA6W67XAAPonI2oh9NFDUbNwKmMpJpSSScykoa53gRN0Ww2
      8cXqtwin8shlJ7SEGkVMo8ao1WwCMXvyqiFu3e8AYJbnQaWwWgCe1o5glK7CKPfXgcX1OYqm
      spcW4T5dgzG/FFnIQeeTqjQbux6Ab4SnOhLjRnz4Q3GHmvsKOk2hJr7poG7vlCT69Drg0eNV
      rDcrKMyVoCPTUQSqO4efl8vnsVgwcIBh4RQlvPg5dJxrC9M0YU6WhgSmzkZXodJfyjLRi6li
      orM2VETaEypXjbLBeWg0brDpj9JrKfarkwIq8auMQX/kYBH4jpWvI2q1Gv7xyz9gy+whPzM4
      j8slp05YjeNLGYaBn//kLRiV3YHr1XupTqh6Hw4hBMIYxzyOfoaCMQkEnc7+59BqAF3VX2og
      avDi/AD1HD5wNHhqeDVJO/wzTbHrSu+9Lmi32/hm9REq8FCYnYaF6HkTRPwWhTihFQRiqGCa
      eo1OI6jEd8KcIaCEMXVMOop4++0M9lUVAFGmHrWnZYA4LozrUFKMcnCi7hfHfH3HyEKhUHjt
      skB938fXDx9gr9dGca6MAkb7OEmku852Vtt99HAdRnl+pFDShSOj+mNo2GlUMGToeQIfHobn
      FFQ6UjWhGu0aYgD+AFT9TQ1Tnha8Y3yDDXWTbf4wat90TEJrUGmZ3euE1bUneFzZQ36ujKKR
      HRiD05h5OsJQQb/Vj6pYbwLG5GiNEudw6oSXzsmNjCwJgfbWBgwhYJgGep6PwDCBmcux/VHH
      SPdZywDAcHEjtcNxDmnUy1HNJJLaug7Sd34u+Qq0PxnPAH3ddpY5ODjA3WePYUwXUZg/WdV2
      WsLXIe4dPX60jm8OPYiJMpAg1DkqEnSaPlObjadP4M/F7yBPiAvScKag70NUo5O8fNCD443M
      TOV3XcejHkr3WW1LHVQeLXIcB1NT4030vCoQQuDTz/6AZiGFzHx5SHq+SOLnmJ4sYGJ/G7XA
      B6zRwoWbH7yv45jK/B1zJKlWq2M07geo50ofQOUMFTy6k81m5dI3akANP47y4KMGROfwUJ9o
      hRfln79uC90pCNDpdOB5HspT0zhsHSI7URw45zRa97SYnivjn83P4MG9VXzbsmHkotdYcOJX
      nU+OOLNE50BTO2nbQlf5TdeHJFAFq1wUHxWH5xe6riuJULcvcBKnTA2jxT1MJpNBLpd7rdf2
      +r6PWr3WLywg+n7XpUuX8OXvHmN6bjZRG+dJ+Gpb77y7gunnO/h0/QBiMrrAgKoBos7RmdI6
      RuF9EcDACkE6J0po6p5FNacJQ5vkxT0A354yicSJU4Gjri8Wi6+NUxuGIVzXlZuF5PN5BEEg
      N5SgiTw7ZcsxcczhCMcojCJAfl7SNgFg4coCru8eYNX3Ycb4WklMnrjwpi4AIoSAlcnB8j24
      vR6cdg2WCOFOzMDiO77H3DtKEwHMCR43rDmu1OG7eoy616tO/EL01zq3Wi25LpabirVabeBc
      KulNCMMQOTudiKCAZISn6yNdmwRbDR9mObkvMOq+fFGO6uepvoQzMwfjcA/O/jZ+8ScfIZVO
      Y3N1DU8OWugUZ+Edl9xJ0jcAgNcDei6QL8Zng54GutBXZEc0yGQyrxTxq8/ZbDZlTSReT1Un
      +ehPXbwjhIBwvbGJ+kVieSaPu24PKcX/UgMVcYhzSoFhDcDbdWbm0WrWkD6mjcVbN3DlZojN
      1TU8OuohPN7fQoQhYBgQnRaMbF62ZwQBCs09lHIpzJaKsJwitrf2z58B+APwh0qKV6WSAzmu
      JOnJjFErXPDzdZ+jTMFrV6/is7sPsHTnLRhmsknJccY6zgTVtXft+iK+/t1jYHYhMqoyKlSq
      I+yo0KkazhTtFpYvldSHwNLtmyjX6vjm4TNMZm0U0yY2D1u4ubyAR1t7KNhArd2DYwp89PGP
      5aVBEODm1BSM7e1tMY7deHLv0Q9B5yWNUBiGgXK5fK5O3XmAEzcVbOX+EAffAyvOMeSVNHRz
      GJlMBp1OB3/z+e9w/YN3tdI16p3EIYpYRzmUv/mnr3A4cbkvXSP6MorAVds+6jz+PbW7hmw2
      g3JpAqVLC9p+RvYlCGHa/XEOPE/rv4zUAFGmDO+ILo9HfcAksWwKd/5QIER/oT85q3wT6Kg1
      x7TaiZjDsqxTTdLRflh5kWz2fVzpT4gyzdT2TNMANJFBXRCFM4KO0XSMoeujX6vgvbdvwCkU
      TkUXhnXib0Y57yNHN0qCxxE5vy6uDQ41o/P7RLvdxuHhIba3t3F4eDiw1SswOtzLV8edNn1E
      iH65mfduv42jnb2B43H+1bhIIqR6vR4WZwrwu8N7RMRFdKIsg6R9t7I51A4OYy0MtQ/qvUfd
      K5Fo0jXGiV+N7MSpV1o/TMRhGCdJWVQL9PvQAhS5qdVqQ5ULVJ8mCVHTSzgtA9D2ow++/RbZ
      lcWhts8TUeYafU+n0xBhCNcPYENP/En7lYj4fR/CsmA6GVSODjA/Zns6MysKY+nmgT2FET3p
      oOsQVQgmc4DWAfB1AVRd7PuY6e31enJXEyrrTn0nQlbrJsXhrJN36XQad+/eRS+fRnmiqB3z
      s0I1U1TJye95VG8jm1sYuH6U7xd1P/67zuTy9p7jxsIk9g/auHJ1YagdXR90gRed4Fb7NbZx
      qgtjjYLjOANlr4GTknkESrz7Ptb8kp0v7UXTlKXdzyLFz8IEQghMTU1hv5Vs3+akOI2v4Hke
      XC9EUNmAcelqpM2etD0dQXLiTZnA/PJVKfmjQq29dru/IYZp4rf/7VN88PE7mLdlfREAACAA
      SURBVF6YG0tYnCoMqiMI7vRxJN344vta7B6GYeRWPt9nCobv+ygWi0Dr8IXdQxewAIbTFGzb
      xs1r87geBPj1ThupXPyCo1GmR9RvdL9UWk+WvK+1/QP8+q+/hNvr17LyrRya//1L/MW//bMh
      E0jnv9Ix7Z1kEVq2ZtcwDATh8VaomsGi84IggGn1iTmbyQ5J/h8ChBAyjEkbsv3QQLPD3WYr
      8TWnnQ/QtaF+nrm80K/vuXofiGGAU0Vr+DVuB4tz0Zm+hmHAbbXwP/72GzSDDPiamKnpzMjw
      swpTF6GRZcrDEIEI4YfHe4NhMNMvCAKE6K/x5O04joPSdOkHSfxAP8pTqVTkRt9xiItanFck
      RgcyvbzG8F68URi3P7pn0xEOF3Jz+WGZyYUl9X1cEO14B7uYuXJ54Ljaj2//8AC17nA/ag0f
      hxtbI/vAzfihZDj+sILVhvfDvj0cCgGwgcukHeRyOek8vgp1e+IKcHHQi42KegCDqcg8RJkk
      9DsKjUYDYauT2O+KC0kmRdS9SLBdmsxgu9ODfVyP5zyd8zAMQeIoKgoH9Pei1vWz0Uvjb//7
      A/z5v0qhOKvPpFU1nMk5V23Q1qzWSqVTyBfyKJfLmJ+fR6lUkrUdXwXiByBr2gMnRK6Cj8Wo
      XUfofP5H11Cp8HGls+d5mJ2dxbu330azWpMRqHFDjeelganNxetLcHe3Iu935vuYFsIIrWwY
      Bu7902d4+NSN1sp2BuvfPhvqlyqQBnwAnRr0fb9fzs6y4YcB0qk0ioXCKyPl48BrmQLJwnlk
      8sVNsui0Ka2pHtehFqK//mJ5eRlffPLfkJ/u28WZQh6zi/q1sKpUNAwDPddF+oxFAvhzpRwH
      71+ewOMwgGFaQ5L6LDBNE04uB6/TgaNsciKfjSySY/pU4boutjY7eJ8di9JShmH09weIsnPJ
      Uezb9NOvPOFz0NauUVJVPcZ3tFGvSRLh4ungSUGbj/+v/+Iv5H0efvcI1XYHmXwu0lQBgFa9
      AX/7EL7nYeqdG5IBuYNoGPrKEFFtEq5cnsHDh4dIHe+5e55+XsbvDhE/78c7v/gAs/PP8M2X
      69hrnPxGY2FZFpqN5pAgoO98ey630ThJhdBFfajBiYmJ14r4gcHZ6yhC4gNHWwLxPW4JUSYS
      XU8MoG4NmwTdbhedTgedTge9Xg83r9/A0frmyDYq+wf48M57eHflNhpHVXSaLQS+j8ruHiqP
      1rH52d2BAACXkuofx+H+IX69eiSJX4ckJqO8L5tw9GoVLC2UYs+3bBuzN5bxy3/xc6TFYIDA
      MAxMpH18/Kv3hp6Lfu/u7KJUraJUqeKOnRrcJ5g+y5tZFmZnZ1/LJYk6ho4rzhUVTyYJGrU9
      FABpOqntJxUq1A6tM/jj93+CP6w/QvnqFS2h7T/dRDm0USgUUK1WUX+0jls3bqJz1MK1yUks
      f/Q+Op0OPvniUyy99zbazRZS6TQsO/49723t4H8+awCFaW12pWEYSNcOcCljo9VsIpVK43lm
      EmZab4L1djZwYyaH9ec1TOYcLF6ZRaFcHjkWhmEgnc/jz/71R9h6somtjSOk0zbmL09j6e0b
      SGnWk9C4F30PH771Y7iu20++bLfbgrIXu93uwICWSqXXdqeVarWKVqsl7UhV2gPDYUK1AIBa
      QVtnCvAkOr4Tp243zaTI5XL48quvcGgFmL16BUEQ4ODxU0AAbrWOn/3ox2jU62i321hYWJDb
      nNLzdDod5PN53Lt/H3u1Cq5fuoKNnS10MjZ6nS5KC3OYmD0hxDAIcbi9gwUzg0a7i5YfIGUY
      +KRlwOTVmTst/MuZDO68dVuOx//597/FJvqr28zCBPxeDyYEzLSD7tPv8Me//DDxc0eFbHno
      tttooLd/gPTCPDLHu4V263VgcxPZd9/Fzh8+w1/88pcnG3p3u11Bu3dQxQeyPV+VxSnjQgiB
      /f39ga2UVBOAn8uh+y0uOkP5TfSiyIw6i91s2zYcx8FfffI3WPzpe+h1u0htV3H79m2kUikc
      Hh5CCIFyuSx32iQhR9rItm3k83l8/vnn+PDDD9FsNqW5trr2BO2pLHLFArrNFpqrG3jr5gpK
      pRPzxDAM/Lv/+y/Rvv4uQrcLu13HiuXjX/+zPxnwK7rdLjrdLtqtFh7uV7BcmsQ3W7t45JTg
      PV/HRx/dSWRh6FJlSKAEQQC/24VXqeJnly/j6pUr+Jv/+Vs0ihPI91xcyeYwMz2Nxzs7mJ2Y
      wNXLl+H7PlKp1MlMMA1KsVjUduB1Qq/XkwPJ90QgCcmjQ1GbfnDoIkbUDuUV0Qs8j8K9lDh4
      69oyNrd2YNoWvMMDvO+8D8MwsL+/j5s3b8pIEoGIhdqg/9vtNgqFAnzfR6/Xw9Uri/j73/4T
      Lv/kXXSe7eCjn3w4FHERQuDf/OqP8d3zbVyamYDXc5DP54ecalriOj01hStXrgAAqo06uu0D
      uJPpaC0oBKrfPkQun4d1aQGtTgfpdBq9Xk/SaPfpM7giRKbZwkfvv4/Za8sA+iHkD26uoF6v
      Y3FlRW7K/dPjWlI8Avh6lVNLiHq9Lheqqy9MlfBqUCBuVphPhvHjAGJDruNCCIFut4uV6zdQ
      Ojrq7+TS28D6+jrm5+flTovtdt9J5KUtOUP3ej389Kc/xWeffQbbtnH79m2ZifvT936EtSfP
      8POfRJsopVIJvzjWCoZpyNVwo55RAJheXIStWQvtHh5BtFvoHlXwzz/+GJOTk/ivv/0tWm4X
      zo0bsmJh7fAQ0+02fvHuu1hfX0c2m8Wvf/1rFAoFlMtl7O3t4Re/+AU+/fRT/OQnP8FXX33V
      T+sWAs+fP8fy8jJ2d3ffPAZQF7foQA4rD60RdExD14wb4YlCnNnFz+l0OjLd5M/++Z9hf38f
      v//97/FHf/RHQ/ukeZ4niYfa7Ha7yOVy+Oijj+C6LtbW1nD79m14nodSqYTJycnEfQ6DEEkf
      /RcffID/7ze/QcVJw3IcGKaJabeHUIRYmZ5GrljE5Z98CMPo55b9+ccf45NPPkHq6AjPNp8j
      m8lgCsDc7KzUTDs7O7hz5w7CMESr1ZKMyDVdGIZYWVlBp9PBrVu30Gg03jwGoMJe6kbOBO7Q
      6pwsHXQzjPy3ccBnkgGMXINAhB6GIcrlMn71q18hCAK4rivtfeq/roIcmT+9Xm+grXFnrw3D
      QMq2E13j+z7+9Je/hO/76Ha7cHs9TE9NyWd//vy5nKzkz7mUy8N1HHzwox9hbW0Nk5OTyB07
      uvPz8/jiiy+QyWSwsNBfO2xZFur1OtbX1wfe4UCYl5zgNwVhGOLo2GzQ2Z/qBJG6Qw6QfI3z
      afqmahEutekz9YdrJr5hCJkxpOnI9+Dg9ygWi7h37x7ee+89+L4P13Wl427b9tjh2nHGQ3fN
      +vo6lpaWYFkWgiDA7u4uZmZm0Ov1+pGbY6b2fR+O48jn7na7ePr0KRYXFzE5OQnbtqUZyH0+
      gmmab54GIMIhe5WO0f9q/D9q5ve8TB11VlZ3P5KEtAkIQTXN+NwCf7YoAlZnR+kYTfqpDDnS
      th+TAaLaJoY1TRNra2tYunoVhwcHmD1OcKPnIZuettKtVqu4evUqpqamJFNks9kBk5ev1X4j
      GQAYLEkSZ+rESffzYgLVVlclblTKgi50yPur7psWBSLC2dlZrK+v4/r16zIkTqDPcdUtkji/
      SbG8vIynT5/CdV3cunVLlpak/SrUCUr6f35+XvaF/8avU03KN5IBCDqJyaWSLgrEr+X/n/b+
      VEaF31Nt8zSTkeQARjExMRVJz5mZGXz99dcABjcvVAkuitBP4+tECRHDMLC8vHyyf5wBpJ00
      1tfXkcvlUB4xW8zvQVC1pRBicB7gTUTUpFdS6c4jP2dZN2xZlkzMOy/owrZcO9B327ZlZuXE
      xAS63e6ACcQ1D80p2LZ95vSYUeNGxRKEELBsC/Nz87BtG2tra5idnUWv15MMThu58+dUfSn6
      3bIs3Lt3D7Zto9PpjK4L9LpCZ9frpHxcFOZFhD054ZJ5RDO5p2mTIkrUV1Wa8zDhxMQEKpWK
      fGaatCOJeRaHn5xr3QbsOtCS0HQ6DduypTYyTRPffvst2u22ZMK4MpRqhM4wDORyOdy6dQu3
      b99+8zQASQc+G8h/AwZTn/lxFeok11n6xD9TGFJdm61Kuqg+UYiXJDxvg6Jf3A+iv2w2i+3t
      bczNzcn2yO6n6ykKc5pn5Jo1SRt85pr6urjYr5H05MkT+L6PW7duodlsotFoYGZmBplMBoZh
      yLI2ZAoeHBzg4OAAly5dQq1Wk7PDb1wYFOhLo739PZhGdK0f3Qyxai5FzRKPaxKp+y7wF6+a
      YxQdUftMESLVZqf0Ad4/3l8qR5lKpRAEAdbX1/H222/LMpAEz/Ng27YsFxOnkc7LIVbzqAzD
      kM+TSqWwtrYG13Vx+fJlTE5OYm9vD61WC51OB+++e1JP9dmzZ7h27ZoUBLZtSxPqjTWBJooT
      ENCbMFFLJNWF3zpCJOIfxzTiUo6kP29PDYnyEC59p2Q3fl+y7/l3kuiUo0TPQBqGzB5yjgmO
      4yCbzaJarcI0TWQyGUmg6rPSWCVdF6COLR8LNdhAmtEwDExNTeHOnTtyxnpubg4rKytoNpt4
      8OABDMPA9vY2jo6O5LiSkLBtu7+6cWTvXkPQbi2F/HDRVS7VdXaqzrbm4NJV9/JVWzyK2XR+
      AQcRn0r0BL50lTuclmX17epjyc/DrMQc3377LVKpFBzHkednMhncv38f3W4X9+/fR6PRkO3w
      uq7Un7EWxWj8C27K8ba4Y14qlU4iRce/e56H9957D0tLS9jc3MSVK1dQLBaHHHrCG+cDAJBZ
      j4ZhyJlEbjOq0DGBLmw5zgRQ3L24eQXomUSdFEtyvyAIYmP5ruvi9u3baDab+PrrrzExMYGb
      N29iZ2cHOzs7mJycxNLSEg4ODpDL5SRTTU5OyvQLctzJ/6D7q8/Eq+7xTFliWp7GoUOv15Mz
      xTRGFO8nxszn+/WLcrmc1G7UtjQx30Qf4ODgQCaHRSGOuOJyiAhRRM6Zh64hE0b1JbgpovNJ
      VCdRvY+uL6PeNUVfLMvC3t4enj9/joWFBVy+fFkS6j/8wz9gdnYWqVQKtVpNbuw3OzuLer0u
      CZ0ccCJmta9k05OkpzwtYHj/haShaeAktAz0zb7f/va3sG0bH374oQwEyDF5UxlgVEGsqDBd
      XOhTdXyTOINck6haiKQZ2fe6++kISwdisKTvms4lCU3lXTKZzJDUBoDPP/8cP/7xj+F5Hlqt
      fjU7Kj8T1T9dZEhlAP4ekoaCqR0idsuy8OzZM9y6dUsm/ZFweSNNIGA0ceqiPHGIYpao39Rz
      SPKqxK4jfiIaPmMbB34PMlF0i/vVa9RIkBAC7XZ7IEEwCAKkUincuXMHd+/e7a8pcNLweoPR
      m1F94zY++SS630eBnolLeWqL9rfmmvaNc4KFEOh6bn+XQgymxvK1unyQRkmeOGd5FLh0I4lK
      f+TI8qiSei+1YFaUX0FERQxFklCNs0c5i/x3MtnIdOl2u7BtG5cvX0alUkE6lR67nDwwuEMQ
      n3yLCibonlP3+8bGBsrl8pBf9UYygO/7sAwLBoZzwznUMCc3fZK+2CTag9+HXjaXzuRocoeS
      pKSO+KMiWLrjFEHRhSy548oZg87jjEJMMTc3h2q1OmCD889R48zLzfA+plIp7eQfhWx1z6fD
      5cuXsbe3h3q9PjCmlmW9eQwghIAVUWZQZ99zQuPEoHMyzwKVOFWCpRfG+8yJkq7RXau7F093
      4M/ApS79kT2u3ocLBNd15dioFS908yLcUdbto8bbULWjrs04zWeaJt555x3U63XpeJO2eeN8
      gDi1ym1P3YCqC+j5dbq2zgqV2IlgqJ+qb5DUVFChTryRdOUhRh6lovP4OmduuuieQ816HafE
      JlUt4YxJ7cYFJOhcy7Lw+eef49133x1am/3GMQAlWKkOHmEU4UatCX5Z4P1THVlOYCTh49Y/
      65xNOkbPyVekqUTPwXOOou5FGixOKxHT6TQGHaPIGJ2vzstwkCah+R6uJYUQbx4DCCGQy+Vk
      TomahqyTMjroTIwkEZnT9jkJdGFYdaKOE70K7htQCJJSD/g56hgBfcGyubmJubk5mWjI7XS6
      hsKp/DrSEEC/jpBOy0b1V92Wll9HxE+z2ZTvxPFGMYAQ/UoKNHVPUkRH8HEMEJXrkyTseRqo
      faI+0LG4+9FsqWou0HeSzJwoVYEQ1SduzgjRz9S8f/8+5ubmYNs2nj59KsebShGurKwgl8tJ
      7dJsNuH7Pr799ltkMhn86Ec/kv5E3POrfeHRMnoW8hdo7bDKJG+kD+B5nkyDIGmoDjaXciSN
      4kKRHC9KC+gc9lHLHrnPwJPIhDjJAqX+qv5NHOHTOfSdm02dTn9Dj0ajgTAMcfPmTaTTaezt
      7aFcLsvKDUtLS1hfX4dhGMjn8/jZz36Gp0+f4uB47S+P2fN76j6r74Mca3o+y7JQqVRw5cqV
      odnlN2omOAz7FSE4MXBzYJzIkI5AdBrgRWgFnvnJIyNngRrlIa1B4JEjYNDMoGOZTAa7u7vo
      drtoNBq4ceMGcrmczFuiahX3799HJpPB8vKyJGTaHvf+/fu4du0a8vm8LO3CnztKO3Fttrq6
      Ct/3sbCwgHa7LYXe7du3BzQd8IalQgRBgMPDw5PFEErUR7VtuXTVMcKoKEZUW2eFLgX5vPZW
      1tVLMoyTFIU4WJYFx3Hw6aef4uDgAH/+538uiZiHNcneV1e6kb3++9//HqVSCW+//bbsjy4M
      y/Hw4UPkcjnZh5mZGVSrVRSLRfmuVaYG3kAG2NvbA4BIBlBfiIpxiDrpudxZHaUp1MxVHhk5
      D/AkND4pl5SBadEMaVk12kbj6/v+QOkV8lUoQLGxsSGLM09OTsp106q5ShLfcRxcuXJSLp7P
      Y3CoJtUb5QPozJEoUyaJDUwqWeekqb6Erh+6z6MYQPdC41Kcx4UaZh23bQowUD91Wa58go1f
      ZxiGtP0dx8Hu7i6eP3+OYrGIxcVFLC4uotVqSXPq0aNHaLfbePvtt2U0iKAjft3xN4oBAMBO
      2UMqXiU8NSo0pDYZUSeJHun8CvW3pD4CSWQe6ThP/4JWio2z3kAFj83zsdIJigFiZOuP5+fn
      8eTJE+RyOfz85z/H2tqazDlyXRerq6u4fv36ULasGtWLui8df6MYwLIslEtlhGGIarUaK319
      3wcMA3ZEPX81FDrO5Nh5LKI/741L1IjSabUKmTQ8gqabM6Hj/Dn4ePq+j48++gie58H3fbRa
      LTnm3W4XxWJRrk+u1+uYnJwcuLdOIFHOEgC5uP+N8gE4Op0Oms0mgMHy4TSIQRAgCAMYMAbC
      alFQGWBUrsooLfMyQYRx1h1AeXKcGl1TEwhpVlk3qUbI5XIwTROfffYZ3n33XaRSKTlx2e12
      8fz5cxiGgWKxiHa7LStGEFRtQLsgUTYA8AaZQNwpMgwD2WxWmhFkd9JLAY6JMjhJIda9RBWq
      va97qeP6HC8DPAf/rNpJN6/CU6PVoEAU8RPx3r17F8vLy7AsS84xkI9w48YNOafx5MkTbV/4
      PQzDkOuc6dgbwwCe5/XrwR+vFQ3DfuFUeumkDQjjrLYChqMLKuLs4O8bqj9z1raiggH0nZtH
      UX3hzFgul9HpdCL7StpLBZ/oI6hzJm8EA4RhiGaziTAMZXIYDW5csSkKs/HvoxBnzqiO8Q+B
      CbjEPi8G0H0fV8vR+PCMVN4maetsNisX+KjX62aN1XPeCAbodrsDkpwGKwxDmcUInC2teZRp
      pHMAVSZQw6ovA+rMqArVNByFKMbmEaEoJuHPbts2PM8b0NJqJW0hBA4ODnB0dITl5eVEYVB1
      jN8YBlBBg8MJQE2XPSuSEI0uRv4yGUAtgKWCb6+aJFiimh2jZtP5b/y5U6kUnjx5gpmZGdku
      vwd9z+Vy2NraAoChPB8OHpTg/XjtV4Txok0cqnPGCZFs1HFMgriXG/U7vw+Xgi/TNKLJLl41
      blyo/edpyGrkZ1Q7PCLXbDbheR52d3cRBMHAbDe/3/T0tEwPiZP8Ot/ktWcAvk1oFHRmB4UG
      kzrBp2GAqImhH4JvQIhaAENQiS5JtIyfR591E5GlUgm9Xg+O42Bzc1MyAL+nEAJzc3PY2NhI
      9DzcKXcc5/U2gWjSJCn4S6DVRjSrmVQ6qpM/49xTF7U4L8TNScSBryd40X3iEaBms4n5+XmZ
      tv3s2bMhH4IY6PDwEPPz85ETbhz0ezabRafTeX0ZIAxDmZOeFFEx+iQSOUrVE0FH+QM65/hF
      IM7RHwXai+tF9EcFva8gCPobWJgmJiYmZOnFdDo9pNULhQLq9frJ7K4SclXNy3Q6jd3dXTSb
      zdfPBKLQ2eHhIQ4ODk7dDk3Tp1IpGSmKYwYufVRmGNef0OEsptF5EG9caPc8Ilfq3ACPkgVB
      gB//+MdYXV1FOp2WayC4NHddVzvbTP/zMUin09jf38etW7dePwZwXReffPIJHjx4ACEE1tbW
      ztymOpBRYbyo71HHxrn/WRiA2+UvQsOcFwMAGHCeHceRpc8fPnyI6elpABggfprBVhfL8Hbp
      j1eRbjabr9c8gBBCbo7wwQcfyNgx1YYf9yUlIWo6rtrt6nrds9r1/CXS3IX6u9o+bWih+hhn
      hWpKnZfPorZBC1u+/PJLmKaJW7duwXEcdLvdoXsahoH19XXcuHFjYK5AV/CLjpVKpf465TP3
      /HsGqch6vT6wqwrFtw3DwO7uLhYWFhK/LE7UZwlPntecgmEYMhxoWRZmZmbQ6XRkXH5/f19K
      ypmZGdTrdRweHmJiYgK9Xg/z8/NnMsNU7aOaGarNHddGlCBSw9DpdBqbm5tYWlpCuVxGr9eT
      awFUJzgMQywvLw+sGlNNKn4fwzDkptuvvAmkEr+KpaUlGIaBhw8fJiZEbvIA+nyWqOvOw95X
      QSZMoVCA4zio1WpoNptot9uo1+vI5/PI5XKoVquoVqs4OjpCNptFo9GA53moVCojZ3zH7Q8w
      mLejErcaqlRLK0a1y2eCq9UqZmZm4LqulPxqujWtBSiXyzg6OhqqYqdCVoQ79uteaQ3geR7q
      9fpQeUCVUGdmZmTdmitXrsjr4xw7lfjVzzroGOe8kEqlpA1Mm0PQ9qZ0z3K5jHw+j2w2i3a7
      jXK5jGaziWKxeCam1D23yuxqktlp5jb4eUIIXLp0CV999RXef//9gfpNOp8snU6jVqvJTTF4
      3zOZjMz5CsMQT58+RbVafbV9AN/3UavVtLa6jgCnpqYQBMEAE4yKbCQxmdRQGz9+3qA2ad1C
      JpMZ+J0yIklbAP0Q4XlqJJ05NMoPSnp/fh4xNx2j9HVedJeSG+lc2guArIFMJgPHcXB4eIjd
      3V2ZDkHLK33ff/UWxAgh0Ov10Gg0hpybqPP5506ng0qlgsXFxcQSHYgn6FGlVc4bOzs7mJub
      Q61Wg+M46HQ6yOVyaLVamJyclHvoGoYxJBHPClXAqNpSPUf3PWpOhJ/nOE5/N8+9PVQqFbz1
      1lvIZrPY2tqC67rodDqYmpqStX74Kr+JiQkZKn3w4AFM08SdO3ekuUQz/EEQvDoagMJYrVZr
      KCswDmq0Ip/Po1qtotlsSimZ1KyJm8zi5+nMBcMwBmaV6WWfZgFKEASy3o3jOPJzPp/H4eEh
      rl69iu+++w5TU1Njtz0KOgaP+q5W2BilCbg26XQ6soDW1NQUVldXUavV8MEHH8jtmSqVCr76
      6itYloVisYjZ2VlsbW0hn8+j0WhgY2MDH3zwASzLiqSbV0IDuK4r/wD94mZV4qhQfYS1tTVY
      loVr167J4yp06l4n8XR1dDjjqQPPq7IlYQD1frQAhGrmNBoNFItFeW6z2YTjOC9EA4yDqB0s
      455Z5yTncjlpvi4uLsp20+m0nKVut9vY3NyUG2YXi0UUCgVZfhE4eS8DGvuHwgDkVHHC6Xa7
      8DwP7XZ7gGjUAUpib+qI2fd9bGxsIJfL4fLlyyOv0w0gRxSDqAV4AcgyHqNyjPj9kzALrXU4
      r4pxZ4G6JJGQpJ4Sb0MIgUajAcuypNZW26MCuBQcoOt6vd5Ahqnanx+ECUQqr9lsDhAPn7mj
      83TVwXQEqZYx10UQLMvCjRs38PTpU+3Eka6fOnXPQ4BJnb5xwpLj+BW0z9j3TfyAfmySgK/Z
      JaLNZrMyI5S0G51DPgCNKV2njpsapQO+Rw1Ay9joTwWPMfMBUblZJWxCXNVnXTnE1dVVrKys
      aMOoUYykixbpNAZfhqkyyHlVdDsrXkToViU4HTHqEPVOheintty4cUN+V9umCBDf+UYVmrzd
      l6oByB4mpy0O1FlVkvFJqVEDGjfrqJpD09PTaLfbyOfzQ78lrZzM78lDg6NMN97/Fx1Bihon
      Xi7eMIxz0SBckKjjFqctdWFW+swXv6uCiu5BRD/KVzRN8/wZgFSS53nyj44nVYEcPI9HlbRq
      3Fmn4lREMUW5XMbm5uaA08gHXkesfMDpPB24BuPncik1irHOC1EMQIib3DoLogRRVJ/U8+Ku
      V8/T0ZruXkKc40xwGIZotVpwXTcyM++8wAlPlSr0exx0Nin5HLp78bbVe0Wdr0qaOCYZx8Y/
      K0Y5oNzsOw8GUDWh7n5x74uP27Nnz1Aul+V33fuO0146k+pcGMD3fTQajYEF1NSZcaFeqyN0
      fp4Oo+4bNeiqeo26x6j21WfgNqjOR/ghgO/PBZwtfZu3kaSdJPuuhWEI13WRy+Vi205invLn
      PBMDCNEPVbZarYGXeprBi3OY+HH+XXcv+q5bHKFqJpWxKIRGeSNRzDfqGQgqE0f19YfCBLSi
      6jyIn2MUo6vvkmsN+r9er2Nubu5c+kIh6DAMT58N6vs+6vX6QOjyrIhziKKIS3e+GjHiv8Vl
      JV66dAnr6+tjaTF+L7UmJu+rrsZ+nCP4MiGEGBAY56mZkhA/EbmuQgf/caUlWwAAEyRJREFU
      v91un1u2Ld1jbA1A0/Bxi835ix1nql83WONKJB4F4BJEtfujXkw2m5UZlHGIkuZxbQOD6v5F
      SNtxMcoBP4uWSio8dNeoqROUv58k6JAUY/kAQvSn2EdVWVAfKqkJEXXeaRhAVaf8uCrlVGLM
      5/M4OjpCoVAYKbn4PXmMP4oBdL+d59ZJ4yJJ9OlFmWlxdKKL5gRBgFqthkKhcC4bgsiCx0lP
      brVaA4sS1D81zKc+aNTvdM64GGU6qKpUN8D8M7W1u7urNWXUZ9VFn+IkP3/+qPNexGKaqL7o
      FrHo8LIc9VHRsYWFBRSLxYG8Hg61xumosaRIUSQrCSHgui56vd7AZmajXlCcxI6K5oxygKPa
      VqVwHPi91fsI0c80ffz4McrlsizHN6o9tQ0gPtU3CU5jOp4FScZ8nLaS9l0VPHHn0TnNZhPX
      r1/X3pM+q/+r7fO+WZY1zABCJJ+tpQ7SdTw9Qb15lCTRqbuoe+jAt8ZJ4nDxz3xw2+02Ll26
      hImJicg+RDnkSYiba4mkGKUxTgudo6m778tgwiSCy/d9PHv2TL4b/u7UtJaoyB9/Xv4uBhjA
      931Uq9XYiSwd10YRNt3wrOC2On3X9SOpv0HgbR4dHaFUKsntdtSB1ElK9fgoU0IHnR2u5gwl
      Ge8ojBoTlZCAk32Ix90x5kWZSs+fPx/K/1ErQatmLR3n/+v6JxnA8zxJ/Cp09i6/cVTj/LxR
      kkzVAkm1RVTfxgGtDtrf34dpmkMLSeieuv6rx8dxGnVaMsq04sejiFp3rU6aR2lbXlzKtm25
      1HAc7XWeTOC6LjY3N6VAUp9bHRNV2qu70tA1/JjNb8YRZ18nfUj1hY66Lk5KqhxOx/iL1eXr
      JIFt21hYWMDR0VFkhEEnCTkzJmFg3fVqW9R3rtLHMYV0PpKOael/fg6ts+Xn8U3FXyaCIMCj
      R4/wzjvvDKwNpr5GQR2rOF9DCBYG5ZsvJ0XSlzwOw4x7H50GOI3Zlc1mYVlW5MKYuPurKvms
      Y6hKOp1tGzdWSSW2amrRwnLDMOTu7mpasc7WjgNvfxxzqtVqYWlpaYj4OagfOqtFN4Y6mHQy
      Lyql/p0FL0py8Nr+BJ1NTi9uVK7J48ePZQ2hcaCOUZS0SdpW3K7s9Cw630cXntWdp4uKEJFT
      FWgaV11fkoyl+kxR/VERBAFarRYAoNFoDFW9iLtHFN1yM1BHHzaAgTDn9wmdqk/ixJEU0BF/
      UoK8fv06nj17hqWlpaH+8DbjcBqhMU7ZxiQEzceL/6YbHyJ4HklLUmA2yg5P2v+oc3d3d+G6
      rmRoYoAo7Xeae/PPcj1Au90e2cB5QGfHqY4MHVM5mF+XhCH4PUZVJBCiv+aUMg1199XZ51H3
      TQrd88ZBZ9qofoIOOuKnMSHi546y6nhH9YO3HeU7RTGtTsu1222srKxo2+H31jF4lKBT/Ub1
      nZo00fWiEaWK6LdxbWi1DZ304m1FMRRhd3dXW0RKR9jjMmUSJNFSOnNLZ37JTMfjvCM57c/G
      h2seMoO4KaVqD25i8d95CjwtRgdOImt0nc50U7MI5ufncXR0NNbz8898LihOSHFaMMfZQWUc
      6Ahd/Z13CsDIfZ7oOt1LUu8ZJ8V0BPzgwQPs7+8PMKNOm4xipHFwGodSfYYo04RAJUSi7mFZ
      1hADRLWlezfEZFR9Qa0Ewc0N1ZRRM2iLxSL29vYSjQX1kQSfzlzVPYP6mznuS1RzYnRpwNQZ
      9RydCaR+VovcRkkP9TodQSTNrRFC4E//9E8HNKHqg5zGvk+CcdpVx0IdW/UdkHROsrJLp9FG
      FQKjsi46n2vU8+jMS6C/JoEc4XHA331cajqBGEc+IXHxqHId/IXpzBhV+qpqLq7z1A+6T9Qg
      0QOMksY6JotSjVRKXHWqk2ixl4U4c0ztL63H5mFM3k4UVKLXMYZubPgxHk2K2jBPN3ZU7Zr7
      YkmgCqlxio2ZYRgOLF4fhShpqJOe6rmqxKb/VZVKxE8mkRqOi5rVVO27KAbS9UWIftHUhw8f
      Rj47nadzRl8GdGPJn5dXYuOSP8p0GTIHNASrEpY6vkL0HWDaTorAGWOUACTkcjncunULh4eH
      5zYuo2CGYQifmR3EEKpJESXt6RpguBSeYRiyfB1NNJGjxAeSzk2lUrJODoVmdeZTVL9UrTEO
      hOjvOl4sFrU7kqtS70WYQ+NAx/S0J7Jpmv3NHyKkeZxZqUInyVUBxMdGPVf3nnm/VeG2urp6
      biVZ4jQQwTYMA7amtrvneQOd48SlDpx6nP5PpVKSmHzfh+M4cF0Xvu9rQ5N8xw/yBSiaobtf
      0rBdEhiGge3tbeTzefR6PRQKBZTL5aEXqPZD7cv3AS6dOYMm9X9Gtc3PjTo/isi42cS/69Dp
      dHDjxo2B/QySjm+cCczvqfoFZpS6AyDr+1DjQRjC830E4cnESS6Xg23b2vWuNI1NBE0Zhlxd
      0y6M1DketqOXSP3QhUpVsycJdJEOIQQ+/vhjXLp0CUEQIJvNDp2jQvcy1XKOvH1+PGpdsg7c
      l+L3VvtCkjPKAdS9I+kMxkjKURojSSp6Em3pOM7AUlRVa4xClGUQdW4YhrCpAgLZjBTWIqKT
      cV72D+jvupFOp9HpdJDNZhGG4UA+kWGclAMnKe55nlzXGQSBNHfCMJTagUsvrgp1jMq/qxIj
      SvVyqOeEYYjp6WnUajXpiKmExH0A3W/kAOoq2sWlmceBXxOV96I+h87U4BqCnx91r1Fjx8dC
      hzi/SwfXdaXg4fdNMmanNUmNbrcryDb3PK8fzxXhsYly8lL7RGwglUrDSafh+76Mmggh5EYN
      9OJJ2tA8A++g4zjSxKJBokQsesGqyuQzjtz0UdWb6hTrzCWyVXWa4+HDh/39YyNULvWLt0db
      FtE9o4rsnpf/wJ/P9/3+TieMwdSAAY+Vq8+rA7/+tCkyOv9slG3f6/Xw/PlzXFdWfZ0n1FCx
      DfSJz7ZtmXsRBAHcXg+e1w+LptMZ2JYNAQHP89Fut4cG03Vd5PN5dLtdOdg8xVr38m3bRq/X
      0xKFaZrIZrMwTVMW0CUtQ1pLBzVKwZkjigjoPKo/nzSMRkTHz09C3KMk5yio2lXH6LwvquQf
      BdLkfCb5NAvRxzVNq9XquW7mpwMfK8NgK8JoMNU1wBCA23XRFf0F8TAAA3rp1ul0pN2fJKyq
      mzUkgkqlUuh0OgD6ez2pRBM3qCSVydzi4LOGqoTyfR/5fH7Ir1DPG1e1666l/2msqeR33DOp
      mk2dM4nK2x8nOMDTGdLpdGI/RYXOCVdNMxWFQuFcil+N6hdwMiYyG7TT6ci6nqqaVy+OA/kM
      qirmD853+uYvle5rWZZ0vg3DQLfblT5CEqhSUe27ygSG0S9hfnBwgOXl5SFiU/vJB5BMHl6b
      PsrWV+1vzvDjaARdO7xf3O7XPb/af1UbEvhmG6OgI3i1PX7u4eEhstkscrmc7HO9Xodt29I3
      5Obqi4Ld6/XQ6XQGOnqaG+okIT/GXxCfoaT7cUlD4VP1xXLbPcpsUjMfuVOt9osfT6fTshaQ
      Sly8/+pn+k7SksDvp5sI4uZYEodSp/2imCjKGeZQ82fonFFm4qj+6QSH+g6fPXuGXC6HJ0+e
      4L333pO/lUolueWR7rnPC9yvtKncHP/hLA3qiF49Vw3TmaYpoyf0Ejgh85dFbapOLSdcvopI
      fck6M4F+X15exsbGBhYXF4d+U59Hvb+O0UZhFKOpUDWRagapbXMhwfsX5xPotB3XzFFQ3yf1
      QRUcX3/9Nd5//32YZn8r1/X1dfi+jxs3bqBer6NUKg2c/yIYgMNWOXZcqJI0qdpSryGzxzTN
      ASebwCMcqomhMkcU4tKlAUh1HIYnu9JEtan7LYr4dQKBTCfSdKo9zyM36nWGceIEx60g4+fz
      /uk0ojqGqkmaFOp78TwPtVpNBi/K5bK8VzabxfLyMjzPw927dxGGYaKaTOcJY3t7WyRR85EN
      KIMbd1wNr6mSGYCce+CgyTJar6qaQONosDhiEUJIX+DKlSuRtvEoqM+u8ykIQRAMVV/gGpJK
      k6iERXMmcf6Dqu1UZtCNIYduFj7umdV+rK2tIQxDXLp0CQCwvr6O+fl5TE1NDfko3weEOA6D
      RqnEJEwQRRiqVNO1xZlgoGa7bSMIAjiOA8dxIISQJfGEEEPly9W+jJJY6svnx1Op1MD6aNWM
      GPXcoxDlJ5HWAQZNPjIN1WtJQ0WBJjV5X+PMnziBRVo3DtT2wcEBqtUq0uk0JiYmMD09Ldu4
      c+fOAF0kMfteJAzDOGEAjtO+3FE3U7/zbe05KCnO8zy0Wi05T0EEQbPIampAUjOOv2wiPtWO
      19nlScdJR1yj+iWEGJjjIL9I11+S/FEMqcsLIqiOOv2uMovatySTY0+ePMH09DRWVlaGztGF
      vIHz3YZpXEgNAJzO/BkF1c5Xf9M5aHwmOJVKyVo1fAANw0CxWES73ZazsLo+x0kY1Vnn/eT5
      T3E+AP89zrEcB1SHB9CHc1VTir5HmRNR0j6KCHWaQNWYOmefhNPk5OTIZ9RpFPJpzqPy8zh4
      6btE8s86qU32LTnFJJ3pPNM0Ydu2nLcgCa6T0klVLLVL5y8sLODJkyeyHJ/6DOpz8IxZVfKO
      YghVcpPdzc1HHl1TCXDUPVTmjmIG1VyN8gt07ar9pGeJM7XUKBppO8/z5LqCl2EinZsXQkQU
      taBCl3VIA6+zO4kQLMuSmoC//Ha7jSAIhgonqSqW2ho1o9lut7GxsYEvv/xS+h28vbjnjjqW
      VBtEOYRxE1lJTT5qm//PoWPoONMuTqNns1l0Op2RY60yMwU3iGn4zqIvEtIHOA/ouDXq5agE
      okoSVSXzeQGSFqQJuNMK9P2HuJTkqH7t7OxgZWUFV69exf379weKMqn9S4I4yRzlW/CMWlWr
      xN1XddZ1kptLXu5YnxcMo7+giQpa6cZMN/66YERUOjedrzr1SaNJuj6dSQPozBdOqFwSqA+k
      u1ZHMOqLImKnJXi8qoXneeh2uwM2vArdfcIwxN7eHmq1GgDgrbfewvXr17X9U023JD4C14D0
      GzEpTzij56LzPM/TVuwbNUY6Lahz7HXOr+ob6fquax/o77G2v7+vHQ/erjpbz/dR5s8zikmj
      +qE7j69J4SVbTq0BolZpRXUAGF6IwgdFZwbRObqXQz4C0E+Wo7g4JxhdWrKun41GA5cvX8bW
      1hZWVla0S/qinEP+W9Q9dCYhMBj6FUIMrKnl45CEEKJWx0U5s+qzRTEY/65LJOS/r6+vY2Zm
      ZuAeurbUflCgI8q3isMo7RilTehep9YAKherHeE2Z5SE4p3jbUStUiKfgFKkbduWawtUYkqq
      UQBgb28Pi4uLaLVa2rAcMaH6gshkWVtbw6effjpw7yiQxNNVa6BnVMct6gVz34Z/1pkFOiGi
      O8bbU9tVTQhuVgFAuVzG1tYW7t27N/QsOqhCT9WwUeNIvyepWh1lCss079irx4BOUp7Gdo5r
      W5V0ZOqQStP5FnFSmgabYu+zs7MyI9F1XUxPTw9IKmrL8zzYto3Dw0NZxTifz+Pp06eoVCpY
      Xl6Wu5nwEiFHR0dIp9NyzWvU7Kvad12Jct0z8vFShZJ6jjouOs2mO5+u4QxGfcjlcnjvvfew
      ubk5MBehA11D55FQUMdbzS/jfUgCXR/4tZIBTNNEt9uVqagvArr4b5x0U6WgzoYFTja45ufy
      WDrdW8ek5FADwOLiIp49e4ZsNgvXdbG+vi4ZZGVlBTs7O/I+QghMTU3h2rVrAICZmRkYRr++
      0NHRkdxsAwCWlpbQbrfRbDblmgMe7aKXro4NP4eeM8rcUo+rWZ06AkpiPkQJNHUc6btt25ib
      m8Pjx49RqVTws5/9bCRD6dpUP8c59mp7SZhDWijfffedSKVSaLfbcF0X8/Pz6Ha7iYoTjRpA
      ddDUFxrXhhr/19meuoxQajuTychVZMAg8fAXu729jampqYGoD7VLeyJnMhkcHh5ifn5eS6gq
      ms0mHMeBaZq4d+8eJicn0ev1cP36dQghZAbktWvXkMvlpENGffJ9X0vsfNklH2N1DKNscJ0A
      GYcB1CREEiphGKLb7SKVSqFarSKTycAwDOzs7ODmzZuRDKC+36i+RGkxroW4CcyFXZQPIM3M
      g4MD8fjxYywuLqJWq+Hw8BArKytDu4WoHRolufmDqh2Oklq8jVESZ9TLcxxHrnOme6sMaBgG
      VldXcfPmzYFro5yvKO0VJ+Hq9bpc2smPTU1NoVarYWNjA/l8HgsLCwPZqEKIoXwf1U+KG4so
      x08VIHH2uc7v4VqcmDQMQ9y7dw+lUgmTk5PY3t5GsVjEwsLCUBtq1mucqUz3o7+oSCJpcg7e
      N9119Ox2GIZYWlpCo9HA5OTk0EzkaRBn940iXLWjUfat7lx+71arJWPe6syq2h9g0DyLk0ZR
      fVTbJQeZa1I6Z3p6GqZpYnp6GobRX4q5v78Px3EwOzuLvb09lEolrR2tEm5cP+MYNA46wtfd
      i86j6JnjOAAgBUocDUUFKtSx5OkgqnkUN+FGfpNOmHEa+v8Bn/gSEx690/MAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Over time' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Positive sample rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='146' name='Total' width='192'>
      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
      JQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
